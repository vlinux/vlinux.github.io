import{_ as r}from"./ValaxyMain.vue_vue_type_style_index_0_lang-0fd5207e.js";import{_ as d,c as h,w as n,o as u,a as A,b as s,d as a,e as o,r as e,f as C,p as k}from"./app-70f72a2b.js";import"./YunFooter.vue_vue_type_script_setup_true_lang-bed31e84.js";import"./YunCard.vue_vue_type_style_index_0_lang-d1e366a0.js";import"./YunPageHeader.vue_vue_type_script_setup_true_lang-281b7f20.js";const zs=JSON.parse('{"title":"使用k8spacket对k8s集群中微服务之间链路调用可视化","description":"","frontmatter":{"title":"使用k8spacket对k8s集群中微服务之间链路调用可视化","date":"2023-02-13T17:16:14.000Z","updated":"2021-02-13T17:16:14.000Z","tags":["全链路监控"],"categories":"Kubernetes"},"headers":[{"level":3,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":3,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":3,"title":"安装 k8spacket","slug":"安装-k8spacket","link":"#安装-k8spacket","children":[]},{"level":3,"title":"安装 dashboards","slug":"安装-dashboards","link":"#安装-dashboards","children":[]},{"level":3,"title":"安装 grafana","slug":"安装-grafana","link":"#安装-grafana","children":[]},{"level":3,"title":"使用","slug":"使用","link":"#使用","children":[]}],"relativePath":"pages/posts/k8spacket-grafana-view.md","path":"/Users/vlinux/vlinux/blog/valaxy/vlinux.github.io/pages/posts/k8spacket-grafana-view.md","lastUpdated":1677656446000}'),c=JSON.parse('{"title":"使用k8spacket对k8s集群中微服务之间链路调用可视化","description":"","frontmatter":{"title":"使用k8spacket对k8s集群中微服务之间链路调用可视化","date":"2023-02-13T17:16:14.000Z","updated":"2021-02-13T17:16:14.000Z","tags":["全链路监控"],"categories":"Kubernetes"},"headers":[{"level":3,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":3,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":3,"title":"安装 k8spacket","slug":"安装-k8spacket","link":"#安装-k8spacket","children":[]},{"level":3,"title":"安装 dashboards","slug":"安装-dashboards","link":"#安装-dashboards","children":[]},{"level":3,"title":"安装 grafana","slug":"安装-grafana","link":"#安装-grafana","children":[]},{"level":3,"title":"使用","slug":"使用","link":"#使用","children":[]}],"relativePath":"pages/posts/k8spacket-grafana-view.md","path":"/Users/vlinux/vlinux/blog/valaxy/vlinux.github.io/pages/posts/k8spacket-grafana-view.md","lastUpdated":1677656446000}'),g={name:"pages/posts/k8spacket-grafana-view.md",data(){return{data:c,frontmatter:c.frontmatter}},setup(){k("pageData",c)}},m=s("p",null,"​ 本文章可以助你可视化k8s集群中的 TCP 流量。了解微服务如何相互通信，以及建立了多少连接，交换了多少字节，这些连接处于活动状态的时间。",-1),_=s("p",null,"你在网上看到的任何文章，包括你在Github仓库看到的官方教程，根本搭建不出来，你想少踩坑？",-1),y=s("p",null,"那就跟我一起......往下看",-1),f={id:"前言",tabindex:"-1"},D=s("p",null,"如何知道 K8S 集群内 Pod 之间建立了哪些 TCP 连接？集群之间存在哪些调用关系？",-1),b=s("p",null,"使用 k8spacket 和Grafana，你可以可视化集群中的 TCP 流量。了解工作负载如何相互通信，以及建立了多少连接，交换了多少字节，这些连接处于活动状态的时间。",-1),v={id:"介绍",tabindex:"-1"},x=s("p",null,"k8spacket是用 Golang 编写的工具，它使用gopacket第三方库来嗅探工作负载（传入和传出）上的 TCP 数据包。它在运行的容器网络接口上创建 TCP 侦听器。当 Kubernetes 创建一个新容器时，CNI 插件负责提供与其他容器进行通信的可能性。最常见的方法是用linux namespace隔离网络并用veth pair连接隔离的 namespace 与网桥。除了bridge 类型，CNI 插件还可以使用其他类型（vlan, ipvlan,macvlan)，但都为容器创建了一个网络接口，它是k8spacket嗅探器的主要句柄。",-1),w=s("p",null,"k8spacket有助于了解 Kubernetes 集群中的 TCP 数据包流量：",-1),P=s("ul",null,[s("li",null,"显示集群中工作负载之间的流量"),s("li",null,"通知流量在集群外路由到哪里"),s("li",null,"显示有关连接关闭套接字的信息"),s("li",null,"显示工作负载发送/接收的字节数"),s("li",null,"计算建立连接的时间"),s("li",null,"显示整个集群中工作负载之间的网络连接拓扑")],-1),T=s("p",null,"k8spacket是一个 Kubernetes API 客户端，可以将嗅探到的工作负载解析为可视化上可见的集群资源名称（Pods和Services）。它作为DaemonSet Pod启动，使用 hostNetwork，并监听节点上的网络接口。",-1),N=s("p",null,"k8spacket 收集 TCP 流、处理数据，使用 Node Graph API Grafana 数据源插件（详情请查看 Node Graph API 插件），通过 API 展示在Grafana面板。",-1),G=s("p",null,"要安装k8spacket，需要同时安装 Grafana。下面将在Kind安装的 k8s 集群上做演示。",-1),I={id:"安装-k8spacket",tabindex:"-1"},S=s("p",null,"使用 Helm 安装：",-1),E=s("div",{class:"language-"},[s("span",{class:"copy"}),s("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"helm repo add k8spacket https://k8spacket.github.io/k8spacket-helm-chart")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"helm install k8spacket --namespace k8spacket k8spacket/k8spacket --create-namespace .")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}})])])])],-1),$=s("p",null,"默认安装会使用下面的命令获取所有需要监听的网络接口：",-1),j=s("div",{class:"language-"},[s("span",{class:"copy"}),s("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"ip address | grep @ | sed -E 's/.* (\\w+)@.*/\\1/' | tr '\\n' ',' | sed 's/.$//'")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}})])])])],-1),R=s("p",null,"其中可能包含一些状态为Down的接口，此时启动k8spacket会报错：",-1),O=s("div",{class:"language-"},[s("span",{class:"copy"}),s("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"2022/08/15 00:17:34 error opening pcap handle: tunl0: That device is not up")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}})])])])],-1),K=s("p",null,"报错中提示网络接口tunl0状态不是up。",-1),L=s("p",null,"所以需要自定义修改values.yaml中的参数。将charts包拉取到本地，解压之后再修改：",-1),U=s("div",{class:"language-"},[s("span",{class:"copy"}),s("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"mkdir k8spacket")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"helm fecth k8spacket/k8spacket")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"tar -zxf k8spacket-0.1.0.tgz")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"cd k8spacket")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}})])])])],-1),V=s("p",null,"修改 values.yaml 中的内容，过滤掉tunl0：",-1),z=s("div",{class:"language-"},[s("span",{class:"copy"}),s("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"k8sPacket:")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"  plugins:")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"    - https://github.com/k8spacket/plugins/releases/download/v1.0.0/nodegraph.so ")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"    - https://github.com/k8spacket/plugins/releases/download/v1.0.0/tls-parser.so ")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"    #上面这两个地址如果你所部属的集群在国外，或者有其他的歪门邪道可以访问到并且下载，那么没问题，就默认，如果访问不到？那我推荐你提前下载下来并且上传你的oss得到外链替换，或者你可以用你觉得更简单的办法")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}}," tcp:")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"   listener:")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"     interfaces:")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"       ## 实现容器网络接口的命令")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},`       command: "ip address | grep @ | grep -v tunl0 | sed -E 's/.* (\\\\w+)@.*/\\\\1/' | tr '\\\\n' ',' | sed 's/.$//'"`)]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"       ## 多久刷新一次要监听的网络接口列表")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},'       refreshPeriod: "10s"')]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"     ## 每 (periodDuration) 秒，刷新在过去 (closeOlderThanDuration) 秒内没有看到活动的连接。")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"     flushing:")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},'       periodDuration: "10s"')]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},'       closeOlderThanDuration: "20s"1.2.3.4.5.6.7.8.9.10.11.12.')]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}})])])])],-1),q=s("ul",null,[s("li",null,"refreshPeriod参数表示多久刷新一次要监听的网络接口列表，增加新的网络接口监听，移除旧网络接口监听。"),s("li",null,"每 periodDuration秒，刷新在过去 closeOlderThanDuration秒内没有看到活动的连接。")],-1),M=s("p",null,"安装成功，包含以下Daemonset Pods 和 Service：",-1),J=s("div",{class:"language-"},[s("span",{class:"copy"}),s("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"# kubectl get pod -n k8spacket -o wide")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"NAME              READY   STATUS    RESTARTS   AGE   IP             NODE                    NOMINATED NODE   READINESS GATES")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"k8spacket-9m4cz   1/1     Running   0          10m   192.168.16.4   k8s118-control-plane    <none>           <none>")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"k8spacket-b4q9k   1/1     Running   0          10m   192.168.16.6   k8s118-control-plane3   <none>           <none>")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"k8spacket-b5nnp   1/1     Running   0          10m   192.168.16.7   k8s118-control-plane2   <none>           <none>")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"k8spacket-c25jh   1/1     Running   0          10m   192.168.16.2   k8s118-worker           <none>           <none>")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"k8spacket-cqqxh   1/1     Running   0          10m   192.168.16.5   k8s118-worker2          <none>           <none>")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"k8spacket-h9hjc   1/1     Running   0          10m   192.168.16.3   k8s118-worker3          <none>           <none>")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"# kubectl get svc -n k8spacket -o wide")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"NAME        TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)    AGE   SELECTOR")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"k8spacket   ClusterIP   11.0.227.158   <none>        8080/TCP   31m   app.kubernetes.io/instance=k8spacket,app.kubernetes.io/name=k8spacket")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}})])])])],-1),Z=s("p",null,"k8spacket Pod 提供了 /metrics 接口暴露指标：",-1),B=s("div",{class:"language-"},[s("span",{class:"copy"}),s("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"curl 192.168.16.4:8080/metrics")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}})])])])],-1),H={id:"安装-dashboards",tabindex:"-1"},Y=s("blockquote",null,[s("p",null,"题外话，这步可以不做，Github仓库人直接有对应的面板Json 你可以直接下载，你做也没关系，更何况下一步中Grafana在安装的时候也携带了面板")],-1),F=s("p",null,"下载k8spacket项目，并将dashboards目录下的面板 configmaps 创建到 K8S 中：",-1),X=s("div",{class:"language-"},[s("span",{class:"copy"}),s("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"wget https://github.com/k8spacket/k8spacket/archive/refs/heads/master.zip")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"unzip master.zip")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"cd k8spacket-master")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"kubectl  apply --recursive -f ./dashboards")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}})])])])],-1),Q=s("p",null,"创建了 k8spacket-logs-dashboard、k8spacket-metrics-dashboard、k8spacket-node-graph-dashboard三个面板。",-1),W=s("p",null,"其中的metrics面板公开了 Prometheus 指标，这里不做演示。只关心node-graph面板。",-1),ss={id:"安装-grafana",tabindex:"-1"},as=s("blockquote",null,[s("p",null,"如果你已经安装好了Grafana并且熟悉怎么配置，那么就按你的来，如果你不想麻烦，就按我的来")],-1),ns=s("p",null,"使用 Helm 安装 grafana，helm-charts 包地址如下：",-1),ls=s("p",null,"同样的拉取到本地：",-1),es=s("blockquote",null,[s("p",null,"这里有个重要的点，不管你看到这个文章的时候Grafana官方的chat包更新到什么时候，你都如果想少踩坑 你就必须按照我的要求来把")],-1),ts=s("div",{class:"language-"},[s("span",{class:"copy"}),s("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"helm repo add grafana https://grafana.github.io/helm-charts")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"helm fetch grafana/grafana")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"tar -zxf grafana-6.50.7.tgz")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"cd grafana/")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}})])])])],-1),os=s("ul",null,[s("li",null,"charts包版本为：6.50.7"),s("li",null,"grafana版本为：8.5.15 （本文最重要的点）")],-1),cs=s("p",null,"修改values.yaml，将 Node Graph API 插件和数据源，以及 node-graph dashboard configmaps 添加到 Grafana。例如：",-1),is=s("blockquote",null,[s("p",null,"这里加不加其他的配置 持久化什么的 你自己看着办，总之下面的配置必须要加")],-1),ps=s("div",{class:"language-"},[s("span",{class:"copy"}),s("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"env:")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}}," GF_INSTALL_PLUGINS: hamedkarbasi93-nodegraphapi-datasource,marcusolsson-json-datasource,marcusolsson-dynamictext-panel")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"dashboardProviders:")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}}," dashboardproviders.yaml:")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"   apiVersion: 1")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"   providers:")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"   - name: 'default'")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"     orgId: 1")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"     folder: ''")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"     type: file")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"     disableDeletion: false")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"     editable: true")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"     options:")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"       path: /var/lib/grafana/dashboards/default")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"dashboardsConfigMaps:")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}}," default: k8spacket-node-graph-dashboard")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"datasources:")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}}," nodegraphapi-plugin-datasource.yaml:")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"     apiVersion: 1")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"     datasources:")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},'     - name: "Node Graph API"')]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"       jsonData:")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},'         url: "http://k8spacket.k8spacket.svc.cluster.local:8080/nodegraph"')]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},'       access: "proxy"')]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"       basicAuth: false")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"       isDefault: false")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"       readOnly: false")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},'       type: "hamedkarbasi93-nodegraphapi-datasource"')]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},'       typeLogoUrl: "public/plugins/hamedkarbasi93-nodegraphapi-datasource/img/logo.svg"')]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},'       typeName: "node-graph-plugin"')]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"       orgId: 1")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"       version: 1")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}}," marcusolsson-json-datasource.yaml:")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"     apiVersion: 1")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"     datasources:")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},'       - name: "JSON API"')]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},'         url: "http://k8spacket.k8spacket.svc.cluster.local:8080/tlsparser/api/data"')]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},'         access: "proxy"')]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"         basicAuth: false")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"         isDefault: false")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"         readOnly: false")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},'         type: "marcusolsson-json-datasource"')]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},'         typeLogoUrl: "public/plugins/marcusolsson-json-datasource/img/logo.svg"')]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},'         typeName: "json-api-plugin"')]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"         orgId: 1")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"         version: 1")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}})])])])],-1),rs=s("p",null,"在values.yaml目录下执行创建命令：",-1),ds=s("p",null,"复制",-1),hs=s("div",{class:"language-"},[s("span",{class:"copy"}),s("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"helm install grafana -f values.yaml  ./")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}})])])])],-1),us=s("p",null,"获取到admin账号的密码：",-1),As=s("p",null,"复制",-1),Cs=s("div",{class:"language-"},[s("span",{class:"copy"}),s("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},'kubectl get secret --namespace default grafana -o jsonpath="{.data.admin-password}" | base64 --decode ; echo')]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}})])])])],-1),ks=s("p",null,"开启临时端口转发，使得集群外可以访问grafana实例：",-1),gs=s("p",null,"复制",-1),ms=s("div",{class:"language-"},[s("span",{class:"copy"}),s("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"kubectl --namespace default port-forward service/grafana 3000:80  --address 0.0.0.0")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}})])])])],-1),_s=s("p",null,"通过http://{Kind宿主机IP}:3000打开grafana面板，并使用上面获取到的密码登录，可以看到Node Graph API插件成功安装：",-1),ys=s("p",null,[s("img",{src:"https://cos.vlinux.cn/www-vlinux-cn-blog-img/21a2a4033c886b86465457fb53ae3e0e892455.jpg",alt:"img"})],-1),fs=s("p",null,"在node graph面板可以看到集群中网络连接拓扑：",-1),Ds=s("p",null,[s("img",{src:"https://cos.vlinux.cn/www-vlinux-cn-blog-img/09be930814432ec76af146c04a5f47bf6d047b.jpg",alt:"img"})],-1),bs={id:"使用",tabindex:"-1"},vs={id:"统计类型",tabindex:"-1"},xs=s("ul",null,[s("li",null,"connection：帮助了解工作负载之间以及与外部客户端之间建立了多少连接。它会告诉你哪些套接字保持打开状态并可能导致问题。"),s("li",null,"bytes：显示工作负载发送或接收的字节数。"),s("li",null,"duration：计算连接的生命周期。")],-1),ws=s("p",null,[s("img",{src:"https://cos.vlinux.cn/www-vlinux-cn-blog-img/473a034013dbdddaa240304639729b6d1bfa66.jpg",alt:"img"})],-1),Ps={id:"过滤器",tabindex:"-1"},Ts=s("ul",null,[s("li",null,"by namespace：选择一个或多个 k8s 命名空间")],-1),Ns=s("p",null,[s("img",{src:"https://cos.vlinux.cn/www-vlinux-cn-blog-img/730a6a477c925d706753817def6641f5c407bd.jpg",alt:"img"})],-1),Gs=s("ul",null,[s("li",null,"by names included：选择工作负载名称进行可视化"),s("li",null,"by names excluded：从可视化中排除工作负载名称")],-1),Is=s("p",null,[s("img",{src:"https://cos.vlinux.cn/www-vlinux-cn-blog-img/47d2f8350733ec0d7ac1752f3fa46923558966.jpg",alt:"img"})],-1);function Ss(l,Es,$s,js,i,Rs){const t=C,p=r;return u(),h(p,{frontmatter:i.frontmatter,data:i.data},{"main-content-md":n(()=>[m,_,y,A(" more "),s("h3",f,[a("前言 "),o(t,{class:"header-anchor",href:"#前言","aria-hidden":"true"},{default:n(()=>[a("#")]),_:1})]),D,b,s("h3",v,[a("介绍 "),o(t,{class:"header-anchor",href:"#介绍","aria-hidden":"true"},{default:n(()=>[a("#")]),_:1})]),x,w,P,T,N,G,s("h3",I,[a("安装 k8spacket "),o(t,{class:"header-anchor",href:"#安装-k8spacket","aria-hidden":"true"},{default:n(()=>[a("#")]),_:1})]),S,E,$,j,R,O,K,L,U,V,z,q,M,J,Z,B,s("h3",H,[a("安装 dashboards "),o(t,{class:"header-anchor",href:"#安装-dashboards","aria-hidden":"true"},{default:n(()=>[a("#")]),_:1})]),Y,F,X,Q,W,s("h3",ss,[a("安装 grafana "),o(t,{class:"header-anchor",href:"#安装-grafana","aria-hidden":"true"},{default:n(()=>[a("#")]),_:1})]),as,ns,s("ul",null,[s("li",null,[o(t,{href:"https://github.com/grafana/helm-charts",target:"_blank",rel:"noreferrer"},{default:n(()=>[a("https://github.com/grafana/helm-charts")]),_:1})])]),ls,es,ts,os,cs,is,ps,rs,ds,hs,us,As,Cs,ks,gs,ms,_s,ys,fs,Ds,s("h3",bs,[a("使用 "),o(t,{class:"header-anchor",href:"#使用","aria-hidden":"true"},{default:n(()=>[a("#")]),_:1})]),s("h4",vs,[a("统计类型 "),o(t,{class:"header-anchor",href:"#统计类型","aria-hidden":"true"},{default:n(()=>[a("#")]),_:1})]),xs,ws,s("h4",Ps,[a("过滤器 "),o(t,{class:"header-anchor",href:"#过滤器","aria-hidden":"true"},{default:n(()=>[a("#")]),_:1})]),Ts,Ns,Gs,Is]),"main-header":n(()=>[e(l.$slots,"main-header")]),"main-header-after":n(()=>[e(l.$slots,"main-header-after")]),"main-nav":n(()=>[e(l.$slots,"main-nav")]),"main-content":n(()=>[e(l.$slots,"main-content")]),"main-content-after":n(()=>[e(l.$slots,"main-content-after")]),"main-nav-before":n(()=>[e(l.$slots,"main-nav-before")]),"main-nav-after":n(()=>[e(l.$slots,"main-nav-after")]),comment:n(()=>[e(l.$slots,"comment")]),footer:n(()=>[e(l.$slots,"footer")]),aside:n(()=>[e(l.$slots,"aside")]),"aside-custom":n(()=>[e(l.$slots,"aside-custom")]),default:n(()=>[e(l.$slots,"default")]),_:3},8,["frontmatter","data"])}const qs=d(g,[["render",Ss]]);export{zs as __pageData,qs as default};
