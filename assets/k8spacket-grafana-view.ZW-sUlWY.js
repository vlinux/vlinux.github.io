import{_ as k}from"./ValaxyMain.vue_vue_type_style_index_0_lang.CdMcCuLR.js";import"./chunks/@vueuse/motion.BITvz5PP.js";import{e as c,u as m,a as b}from"./chunks/vue-router.Cro35QNm.js";import{aa as f,ap as a,ag as t,af as n,ae as v,ai as l,P as h,ab as y,a1 as P}from"./framework.GHZxz7jq.js";import"./index.mH_NH_pU.js";import"./chunks/dayjs.BldX5ftQ.js";import"./chunks/vue-i18n.C7V8WoQZ.js";import"./chunks/pinia.BfAlK2F6.js";import"./chunks/nprogress.BZwbcB2O.js";/* empty css                    */import"./YunComment.vue_vue_type_style_index_0_lang.BaL1KWr8.js";import"./index.C5okkQwF.js";import"./YunPageHeader.vue_vue_type_script_setup_true_lang.fblE3Fel.js";import"./post.Dy68RlFi.js";const w=c("/posts/k8spacket-grafana-view",async p=>JSON.parse('{"title":"使用k8spacket对k8s集群中微服务之间链路调用可视化","description":"","frontmatter":{"title":"使用k8spacket对k8s集群中微服务之间链路调用可视化","date":"2023-02-13 17:16:14","updated":"2021-02-13 17:16:14","tags":["全链路监控"],"categories":"Kubernetes"},"headers":[],"relativePath":"pages/posts/k8spacket-grafana-view.md","lastUpdated":null}'),{lazy:(p,i)=>p.name===i.name}),K={__name:"k8spacket-grafana-view",setup(p,{expose:i}){const{data:u}=w(),r=b(),d=m(),o=Object.assign(d.meta.frontmatter||{},u.value?.frontmatter||{});return r.currentRoute.value.data=u.value,P("valaxy:frontmatter",o),globalThis.$frontmatter=o,i({frontmatter:{title:"使用k8spacket对k8s集群中微服务之间链路调用可视化",date:"2023-02-13 17:16:14",updated:"2021-02-13 17:16:14",tags:["全链路监控"],categories:"Kubernetes"}}),(e,s)=>{const g=k;return y(),f(g,{frontmatter:h(o)},{"main-content-md":a(()=>[s[0]||(s[0]=n("p",null,"​ 本文章可以助你可视化k8s集群中的 TCP 流量。了解微服务如何相互通信，以及建立了多少连接，交换了多少字节，这些连接处于活动状态的时间。",-1)),s[1]||(s[1]=n("p",null,"你在网上看到的任何文章，包括你在Github仓库看到的官方教程，根本搭建不出来，你想少踩坑？",-1)),s[2]||(s[2]=n("p",null,"那就跟我一起…往下看",-1)),v(" more "),s[3]||(s[3]=n("h3",{id:"前言",tabindex:"-1"},[l("前言 "),n("a",{class:"header-anchor",href:"#前言","aria-label":'Permalink to "前言"'},"​")],-1)),s[4]||(s[4]=n("p",null,"如何知道 K8S 集群内 Pod 之间建立了哪些 TCP 连接？集群之间存在哪些调用关系？",-1)),s[5]||(s[5]=n("p",null,"使用 k8spacket 和Grafana，你可以可视化集群中的 TCP 流量。了解工作负载如何相互通信，以及建立了多少连接，交换了多少字节，这些连接处于活动状态的时间。",-1)),s[6]||(s[6]=n("h3",{id:"介绍",tabindex:"-1"},[l("介绍 "),n("a",{class:"header-anchor",href:"#介绍","aria-label":'Permalink to "介绍"'},"​")],-1)),s[7]||(s[7]=n("p",null,"k8spacket是用 Golang 编写的工具，它使用gopacket第三方库来嗅探工作负载（传入和传出）上的 TCP 数据包。它在运行的容器网络接口上创建 TCP 侦听器。当 Kubernetes 创建一个新容器时，CNI 插件负责提供与其他容器进行通信的可能性。最常见的方法是用linux namespace隔离网络并用veth pair连接隔离的 namespace 与网桥。除了bridge 类型，CNI 插件还可以使用其他类型（vlan, ipvlan,macvlan)，但都为容器创建了一个网络接口，它是k8spacket嗅探器的主要句柄。",-1)),s[8]||(s[8]=n("p",null,"k8spacket有助于了解 Kubernetes 集群中的 TCP 数据包流量：",-1)),s[9]||(s[9]=n("ul",null,[n("li",null,"显示集群中工作负载之间的流量"),n("li",null,"通知流量在集群外路由到哪里"),n("li",null,"显示有关连接关闭套接字的信息"),n("li",null,"显示工作负载发送/接收的字节数"),n("li",null,"计算建立连接的时间"),n("li",null,"显示整个集群中工作负载之间的网络连接拓扑")],-1)),s[10]||(s[10]=n("p",null,"k8spacket是一个 Kubernetes API 客户端，可以将嗅探到的工作负载解析为可视化上可见的集群资源名称（Pods和Services）。它作为DaemonSet Pod启动，使用 hostNetwork，并监听节点上的网络接口。",-1)),s[11]||(s[11]=n("p",null,"k8spacket 收集 TCP 流、处理数据，使用 Node Graph API Grafana 数据源插件（详情请查看 Node Graph API 插件），通过 API 展示在Grafana面板。",-1)),s[12]||(s[12]=n("p",null,"要安装k8spacket，需要同时安装 Grafana。下面将在Kind安装的 k8s 集群上做演示。",-1)),s[13]||(s[13]=n("h3",{id:"安装-k8spacket",tabindex:"-1"},[l("安装 k8spacket "),n("a",{class:"header-anchor",href:"#安装-k8spacket","aria-label":'Permalink to "安装 k8spacket"'},"​")],-1)),s[14]||(s[14]=n("p",null,"使用 Helm 安装：",-1)),s[15]||(s[15]=n("div",{class:"language-"},[n("button",{title:"Copy code",class:"copy"}),n("span",{class:"lang"}),n("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[n("code",{"v-pre":""},[n("span",{class:"line"},[n("span",null,"helm repo add k8spacket https://k8spacket.github.io/k8spacket-helm-chart")]),l(`
`),n("span",{class:"line"},[n("span",null,"helm install k8spacket --namespace k8spacket k8spacket/k8spacket --create-namespace .")])])]),n("button",{class:"code-block-unfold-btn"})],-1)),s[16]||(s[16]=n("p",null,"默认安装会使用下面的命令获取所有需要监听的网络接口：",-1)),s[17]||(s[17]=n("div",{class:"language-"},[n("button",{title:"Copy code",class:"copy"}),n("span",{class:"lang"}),n("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[n("code",{"v-pre":""},[n("span",{class:"line"},[n("span",null,"ip address | grep @ | sed -E 's/.* (\\w+)@.*/\\1/' | tr '\\n' ',' | sed 's/.$//'")])])]),n("button",{class:"code-block-unfold-btn"})],-1)),s[18]||(s[18]=n("p",null,"其中可能包含一些状态为Down的接口，此时启动k8spacket会报错：",-1)),s[19]||(s[19]=n("div",{class:"language-"},[n("button",{title:"Copy code",class:"copy"}),n("span",{class:"lang"}),n("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[n("code",{"v-pre":""},[n("span",{class:"line"},[n("span",null,"2022/08/15 00:17:34 error opening pcap handle: tunl0: That device is not up")])])]),n("button",{class:"code-block-unfold-btn"})],-1)),s[20]||(s[20]=n("p",null,"报错中提示网络接口tunl0状态不是up。",-1)),s[21]||(s[21]=n("p",null,"所以需要自定义修改values.yaml中的参数。将charts包拉取到本地，解压之后再修改：",-1)),s[22]||(s[22]=n("div",{class:"language-"},[n("button",{title:"Copy code",class:"copy"}),n("span",{class:"lang"}),n("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[n("code",{"v-pre":""},[n("span",{class:"line"},[n("span",null,"mkdir k8spacket")]),l(`
`),n("span",{class:"line"},[n("span",null,"helm fecth k8spacket/k8spacket")]),l(`
`),n("span",{class:"line"},[n("span",null,"tar -zxf k8spacket-0.1.0.tgz")]),l(`
`),n("span",{class:"line"},[n("span",null,"cd k8spacket")])])]),n("button",{class:"code-block-unfold-btn"})],-1)),s[23]||(s[23]=n("p",null,"修改 values.yaml 中的内容，过滤掉tunl0：",-1)),s[24]||(s[24]=n("div",{class:"language-"},[n("button",{title:"Copy code",class:"copy"}),n("span",{class:"lang"}),n("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[n("code",{"v-pre":""},[n("span",{class:"line"},[n("span",null,"k8sPacket:")]),l(`
`),n("span",{class:"line"},[n("span",null,"  plugins:")]),l(`
`),n("span",{class:"line"},[n("span",null,"    - https://github.com/k8spacket/plugins/releases/download/v1.0.0/nodegraph.so ")]),l(`
`),n("span",{class:"line"},[n("span",null,"    - https://github.com/k8spacket/plugins/releases/download/v1.0.0/tls-parser.so ")]),l(`
`),n("span",{class:"line"},[n("span",null,"    #上面这两个地址如果你所部属的集群在国外，或者有其他的歪门邪道可以访问到并且下载，那么没问题，就默认，如果访问不到？那我推荐你提前下载下来并且上传你的oss得到外链替换，或者你可以用你觉得更简单的办法")]),l(`
`),n("span",{class:"line"},[n("span",null," tcp:")]),l(`
`),n("span",{class:"line"},[n("span",null,"   listener:")]),l(`
`),n("span",{class:"line"},[n("span",null,"     interfaces:")]),l(`
`),n("span",{class:"line"},[n("span",null,"       ## 实现容器网络接口的命令")]),l(`
`),n("span",{class:"line"},[n("span",null,`       command: "ip address | grep @ | grep -v tunl0 | sed -E 's/.* (\\\\w+)@.*/\\\\1/' | tr '\\\\n' ',' | sed 's/.$//'"`)]),l(`
`),n("span",{class:"line"},[n("span",null,"       ## 多久刷新一次要监听的网络接口列表")]),l(`
`),n("span",{class:"line"},[n("span",null,'       refreshPeriod: "10s"')]),l(`
`),n("span",{class:"line"},[n("span",null,"     ## 每 (periodDuration) 秒，刷新在过去 (closeOlderThanDuration) 秒内没有看到活动的连接。")]),l(`
`),n("span",{class:"line"},[n("span",null,"     flushing:")]),l(`
`),n("span",{class:"line"},[n("span",null,'       periodDuration: "10s"')]),l(`
`),n("span",{class:"line"},[n("span",null,'       closeOlderThanDuration: "20s"1.2.3.4.5.6.7.8.9.10.11.12.')])])]),n("button",{class:"code-block-unfold-btn"})],-1)),s[25]||(s[25]=n("ul",null,[n("li",null,"refreshPeriod参数表示多久刷新一次要监听的网络接口列表，增加新的网络接口监听，移除旧网络接口监听。"),n("li",null,"每 periodDuration秒，刷新在过去 closeOlderThanDuration秒内没有看到活动的连接。")],-1)),s[26]||(s[26]=n("p",null,"安装成功，包含以下Daemonset Pods 和 Service：",-1)),s[27]||(s[27]=n("div",{class:"language-"},[n("button",{title:"Copy code",class:"copy"}),n("span",{class:"lang"}),n("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[n("code",{"v-pre":""},[n("span",{class:"line"},[n("span",null,"# kubectl get pod -n k8spacket -o wide")]),l(`
`),n("span",{class:"line"},[n("span",null,"NAME              READY   STATUS    RESTARTS   AGE   IP             NODE                    NOMINATED NODE   READINESS GATES")]),l(`
`),n("span",{class:"line"},[n("span",null,"k8spacket-9m4cz   1/1     Running   0          10m   192.168.16.4   k8s118-control-plane    <none>           <none>")]),l(`
`),n("span",{class:"line"},[n("span",null,"k8spacket-b4q9k   1/1     Running   0          10m   192.168.16.6   k8s118-control-plane3   <none>           <none>")]),l(`
`),n("span",{class:"line"},[n("span",null,"k8spacket-b5nnp   1/1     Running   0          10m   192.168.16.7   k8s118-control-plane2   <none>           <none>")]),l(`
`),n("span",{class:"line"},[n("span",null,"k8spacket-c25jh   1/1     Running   0          10m   192.168.16.2   k8s118-worker           <none>           <none>")]),l(`
`),n("span",{class:"line"},[n("span",null,"k8spacket-cqqxh   1/1     Running   0          10m   192.168.16.5   k8s118-worker2          <none>           <none>")]),l(`
`),n("span",{class:"line"},[n("span",null,"k8spacket-h9hjc   1/1     Running   0          10m   192.168.16.3   k8s118-worker3          <none>           <none>")]),l(`
`),n("span",{class:"line"},[n("span",null,"# kubectl get svc -n k8spacket -o wide")]),l(`
`),n("span",{class:"line"},[n("span",null,"NAME        TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)    AGE   SELECTOR")]),l(`
`),n("span",{class:"line"},[n("span",null,"k8spacket   ClusterIP   11.0.227.158   <none>        8080/TCP   31m   app.kubernetes.io/instance=k8spacket,app.kubernetes.io/name=k8spacket")])])]),n("button",{class:"code-block-unfold-btn"})],-1)),s[28]||(s[28]=n("p",null,"k8spacket Pod 提供了 /metrics 接口暴露指标：",-1)),s[29]||(s[29]=n("div",{class:"language-"},[n("button",{title:"Copy code",class:"copy"}),n("span",{class:"lang"}),n("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[n("code",{"v-pre":""},[n("span",{class:"line"},[n("span",null,"curl 192.168.16.4:8080/metrics")])])]),n("button",{class:"code-block-unfold-btn"})],-1)),s[30]||(s[30]=n("h3",{id:"安装-dashboards",tabindex:"-1"},[l("安装 dashboards "),n("a",{class:"header-anchor",href:"#安装-dashboards","aria-label":'Permalink to "安装 dashboards"'},"​")],-1)),s[31]||(s[31]=n("blockquote",null,[n("p",null,"题外话，这步可以不做，Github仓库人直接有对应的面板Json 你可以直接下载，你做也没关系，更何况下一步中Grafana在安装的时候也携带了面板")],-1)),s[32]||(s[32]=n("p",null,"下载k8spacket项目，并将dashboards目录下的面板 configmaps 创建到 K8S 中：",-1)),s[33]||(s[33]=n("div",{class:"language-"},[n("button",{title:"Copy code",class:"copy"}),n("span",{class:"lang"}),n("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[n("code",{"v-pre":""},[n("span",{class:"line"},[n("span",null,"wget https://github.com/k8spacket/k8spacket/archive/refs/heads/master.zip")]),l(`
`),n("span",{class:"line"},[n("span",null,"unzip master.zip")]),l(`
`),n("span",{class:"line"},[n("span",null,"cd k8spacket-master")]),l(`
`),n("span",{class:"line"},[n("span",null,"kubectl  apply --recursive -f ./dashboards")])])]),n("button",{class:"code-block-unfold-btn"})],-1)),s[34]||(s[34]=n("p",null,"创建了 k8spacket-logs-dashboard、k8spacket-metrics-dashboard、k8spacket-node-graph-dashboard三个面板。",-1)),s[35]||(s[35]=n("p",null,"其中的metrics面板公开了 Prometheus 指标，这里不做演示。只关心node-graph面板。",-1)),s[36]||(s[36]=n("h3",{id:"安装-grafana",tabindex:"-1"},[l("安装 grafana "),n("a",{class:"header-anchor",href:"#安装-grafana","aria-label":'Permalink to "安装 grafana"'},"​")],-1)),s[37]||(s[37]=n("blockquote",null,[n("p",null,"如果你已经安装好了Grafana并且熟悉怎么配置，那么就按你的来，如果你不想麻烦，就按我的来")],-1)),s[38]||(s[38]=n("p",null,"使用 Helm 安装 grafana，helm-charts 包地址如下：",-1)),s[39]||(s[39]=n("ul",null,[n("li",null,[n("a",{href:"https://github.com/grafana/helm-charts",target:"_blank",rel:"noreferrer"},"https://github.com/grafana/helm-charts")])],-1)),s[40]||(s[40]=n("p",null,"同样的拉取到本地：",-1)),s[41]||(s[41]=n("blockquote",null,[n("p",null,"这里有个重要的点，不管你看到这个文章的时候Grafana官方的chat包更新到什么时候，你都如果想少踩坑 你就必须按照我的要求来把")],-1)),s[42]||(s[42]=n("div",{class:"language-"},[n("button",{title:"Copy code",class:"copy"}),n("span",{class:"lang"}),n("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[n("code",{"v-pre":""},[n("span",{class:"line"},[n("span",null,"helm repo add grafana https://grafana.github.io/helm-charts")]),l(`
`),n("span",{class:"line"},[n("span",null,"helm fetch grafana/grafana")]),l(`
`),n("span",{class:"line"},[n("span",null,"tar -zxf grafana-6.50.7.tgz")]),l(`
`),n("span",{class:"line"},[n("span",null,"cd grafana/")])])]),n("button",{class:"code-block-unfold-btn"})],-1)),s[43]||(s[43]=n("ul",null,[n("li",null,"charts包版本为：6.50.7"),n("li",null,"grafana版本为：8.5.15 （本文最重要的点）")],-1)),s[44]||(s[44]=n("p",null,"修改values.yaml，将 Node Graph API 插件和数据源，以及 node-graph dashboard configmaps 添加到 Grafana。例如：",-1)),s[45]||(s[45]=n("blockquote",null,[n("p",null,"这里加不加其他的配置 持久化什么的 你自己看着办，总之下面的配置必须要加")],-1)),s[46]||(s[46]=n("div",{class:"language-"},[n("button",{title:"Copy code",class:"copy"}),n("span",{class:"lang"}),n("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[n("code",{"v-pre":""},[n("span",{class:"line"},[n("span",null,"env:")]),l(`
`),n("span",{class:"line"},[n("span",null," GF_INSTALL_PLUGINS: hamedkarbasi93-nodegraphapi-datasource,marcusolsson-json-datasource,marcusolsson-dynamictext-panel")]),l(`
`),n("span",{class:"line"},[n("span",null,"dashboardProviders:")]),l(`
`),n("span",{class:"line"},[n("span",null," dashboardproviders.yaml:")]),l(`
`),n("span",{class:"line"},[n("span",null,"   apiVersion: 1")]),l(`
`),n("span",{class:"line"},[n("span",null,"   providers:")]),l(`
`),n("span",{class:"line"},[n("span",null,"   - name: 'default'")]),l(`
`),n("span",{class:"line"},[n("span",null,"     orgId: 1")]),l(`
`),n("span",{class:"line"},[n("span",null,"     folder: ''")]),l(`
`),n("span",{class:"line"},[n("span",null,"     type: file")]),l(`
`),n("span",{class:"line"},[n("span",null,"     disableDeletion: false")]),l(`
`),n("span",{class:"line"},[n("span",null,"     editable: true")]),l(`
`),n("span",{class:"line"},[n("span",null,"     options:")]),l(`
`),n("span",{class:"line"},[n("span",null,"       path: /var/lib/grafana/dashboards/default")]),l(`
`),n("span",{class:"line"},[n("span",null,"dashboardsConfigMaps:")]),l(`
`),n("span",{class:"line"},[n("span",null," default: k8spacket-node-graph-dashboard")]),l(`
`),n("span",{class:"line"},[n("span",null,"datasources:")]),l(`
`),n("span",{class:"line"},[n("span",null," nodegraphapi-plugin-datasource.yaml:")]),l(`
`),n("span",{class:"line"},[n("span",null,"     apiVersion: 1")]),l(`
`),n("span",{class:"line"},[n("span",null,"     datasources:")]),l(`
`),n("span",{class:"line"},[n("span",null,'     - name: "Node Graph API"')]),l(`
`),n("span",{class:"line"},[n("span",null,"       jsonData:")]),l(`
`),n("span",{class:"line"},[n("span",null,'         url: "http://k8spacket.k8spacket.svc.cluster.local:8080/nodegraph"')]),l(`
`),n("span",{class:"line"},[n("span",null,'       access: "proxy"')]),l(`
`),n("span",{class:"line"},[n("span",null,"       basicAuth: false")]),l(`
`),n("span",{class:"line"},[n("span",null,"       isDefault: false")]),l(`
`),n("span",{class:"line"},[n("span",null,"       readOnly: false")]),l(`
`),n("span",{class:"line"},[n("span",null,'       type: "hamedkarbasi93-nodegraphapi-datasource"')]),l(`
`),n("span",{class:"line"},[n("span",null,'       typeLogoUrl: "public/plugins/hamedkarbasi93-nodegraphapi-datasource/img/logo.svg"')]),l(`
`),n("span",{class:"line"},[n("span",null,'       typeName: "node-graph-plugin"')]),l(`
`),n("span",{class:"line"},[n("span",null,"       orgId: 1")]),l(`
`),n("span",{class:"line"},[n("span",null,"       version: 1")]),l(`
`),n("span",{class:"line"},[n("span",null," marcusolsson-json-datasource.yaml:")]),l(`
`),n("span",{class:"line"},[n("span",null,"     apiVersion: 1")]),l(`
`),n("span",{class:"line"},[n("span",null,"     datasources:")]),l(`
`),n("span",{class:"line"},[n("span",null,'       - name: "JSON API"')]),l(`
`),n("span",{class:"line"},[n("span",null,'         url: "http://k8spacket.k8spacket.svc.cluster.local:8080/tlsparser/api/data"')]),l(`
`),n("span",{class:"line"},[n("span",null,'         access: "proxy"')]),l(`
`),n("span",{class:"line"},[n("span",null,"         basicAuth: false")]),l(`
`),n("span",{class:"line"},[n("span",null,"         isDefault: false")]),l(`
`),n("span",{class:"line"},[n("span",null,"         readOnly: false")]),l(`
`),n("span",{class:"line"},[n("span",null,'         type: "marcusolsson-json-datasource"')]),l(`
`),n("span",{class:"line"},[n("span",null,'         typeLogoUrl: "public/plugins/marcusolsson-json-datasource/img/logo.svg"')]),l(`
`),n("span",{class:"line"},[n("span",null,'         typeName: "json-api-plugin"')]),l(`
`),n("span",{class:"line"},[n("span",null,"         orgId: 1")]),l(`
`),n("span",{class:"line"},[n("span",null,"         version: 1")])])]),n("button",{class:"code-block-unfold-btn"})],-1)),s[47]||(s[47]=n("p",null,"在values.yaml目录下执行创建命令：",-1)),s[48]||(s[48]=n("p",null,"复制",-1)),s[49]||(s[49]=n("div",{class:"language-"},[n("button",{title:"Copy code",class:"copy"}),n("span",{class:"lang"}),n("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[n("code",{"v-pre":""},[n("span",{class:"line"},[n("span",null,"helm install grafana -f values.yaml  ./")])])]),n("button",{class:"code-block-unfold-btn"})],-1)),s[50]||(s[50]=n("p",null,"获取到admin账号的密码：",-1)),s[51]||(s[51]=n("p",null,"复制",-1)),s[52]||(s[52]=n("div",{class:"language-"},[n("button",{title:"Copy code",class:"copy"}),n("span",{class:"lang"}),n("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[n("code",{"v-pre":""},[n("span",{class:"line"},[n("span",null,'kubectl get secret --namespace default grafana -o jsonpath="{.data.admin-password}" | base64 --decode ; echo')])])]),n("button",{class:"code-block-unfold-btn"})],-1)),s[53]||(s[53]=n("p",null,"开启临时端口转发，使得集群外可以访问grafana实例：",-1)),s[54]||(s[54]=n("p",null,"复制",-1)),s[55]||(s[55]=n("div",{class:"language-"},[n("button",{title:"Copy code",class:"copy"}),n("span",{class:"lang"}),n("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[n("code",{"v-pre":""},[n("span",{class:"line"},[n("span",null,"kubectl --namespace default port-forward service/grafana 3000:80  --address 0.0.0.0")])])]),n("button",{class:"code-block-unfold-btn"})],-1)),s[56]||(s[56]=n("p",null,"通过http://{Kind宿主机IP}:3000打开grafana面板，并使用上面获取到的密码登录，可以看到Node Graph API插件成功安装：",-1)),s[57]||(s[57]=n("figure",null,[n("img",{src:"https://cos.vlinux.cn/www-vlinux-cn-blog-img/21a2a4033c886b86465457fb53ae3e0e892455.jpg",alt:"img",loading:"lazy",decoding:"async"})],-1)),s[58]||(s[58]=n("p",null,"在node graph面板可以看到集群中网络连接拓扑：",-1)),s[59]||(s[59]=n("figure",null,[n("img",{src:"https://cos.vlinux.cn/www-vlinux-cn-blog-img/09be930814432ec76af146c04a5f47bf6d047b.jpg",alt:"img",loading:"lazy",decoding:"async"})],-1)),s[60]||(s[60]=n("h3",{id:"使用",tabindex:"-1"},[l("使用 "),n("a",{class:"header-anchor",href:"#使用","aria-label":'Permalink to "使用"'},"​")],-1)),s[61]||(s[61]=n("h4",{id:"统计类型",tabindex:"-1"},[l("统计类型 "),n("a",{class:"header-anchor",href:"#统计类型","aria-label":'Permalink to "统计类型"'},"​")],-1)),s[62]||(s[62]=n("ul",null,[n("li",null,"connection：帮助了解工作负载之间以及与外部客户端之间建立了多少连接。它会告诉你哪些套接字保持打开状态并可能导致问题。"),n("li",null,"bytes：显示工作负载发送或接收的字节数。"),n("li",null,"duration：计算连接的生命周期。")],-1)),s[63]||(s[63]=n("figure",null,[n("img",{src:"https://cos.vlinux.cn/www-vlinux-cn-blog-img/473a034013dbdddaa240304639729b6d1bfa66.jpg",alt:"img",loading:"lazy",decoding:"async"})],-1)),s[64]||(s[64]=n("h4",{id:"过滤器",tabindex:"-1"},[l("过滤器 "),n("a",{class:"header-anchor",href:"#过滤器","aria-label":'Permalink to "过滤器"'},"​")],-1)),s[65]||(s[65]=n("ul",null,[n("li",null,"by namespace：选择一个或多个 k8s 命名空间")],-1)),s[66]||(s[66]=n("figure",null,[n("img",{src:"https://cos.vlinux.cn/www-vlinux-cn-blog-img/730a6a477c925d706753817def6641f5c407bd.jpg",alt:"img",loading:"lazy",decoding:"async"})],-1)),s[67]||(s[67]=n("ul",null,[n("li",null,"by names included：选择工作负载名称进行可视化"),n("li",null,"by names excluded：从可视化中排除工作负载名称")],-1)),s[68]||(s[68]=n("figure",null,[n("img",{src:"https://cos.vlinux.cn/www-vlinux-cn-blog-img/47d2f8350733ec0d7ac1752f3fa46923558966.jpg",alt:"img",loading:"lazy",decoding:"async"})],-1))]),"main-header":a(()=>[t(e.$slots,"main-header")]),"main-header-after":a(()=>[t(e.$slots,"main-header-after")]),"main-nav":a(()=>[t(e.$slots,"main-nav")]),"main-content-before":a(()=>[t(e.$slots,"main-content-before")]),"main-content":a(()=>[t(e.$slots,"main-content")]),"main-content-after":a(()=>[t(e.$slots,"main-content-after")]),"main-nav-before":a(()=>[t(e.$slots,"main-nav-before")]),"main-nav-after":a(()=>[t(e.$slots,"main-nav-after")]),comment:a(()=>[t(e.$slots,"comment")]),footer:a(()=>[t(e.$slots,"footer")]),aside:a(()=>[t(e.$slots,"aside")]),"aside-custom":a(()=>[t(e.$slots,"aside-custom")]),default:a(()=>[t(e.$slots,"default")]),_:3},8,["frontmatter"])}}};export{K as default,w as usePageData};
