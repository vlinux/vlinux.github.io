import{_ as r}from"./ValaxyMain.vue_vue_type_style_index_0_lang-3db59c20.js";import{_ as c,c as p,w as e,o as _,b as t,d as a,e as m,r as n,f as h,p as u}from"./app-1dca60bf.js";import"./YunFooter.vue_vue_type_script_setup_true_lang-bf269ab4.js";import"./YunCard.vue_vue_type_style_index_0_lang-e8908175.js";import"./YunPageHeader.vue_vue_type_script_setup_true_lang-e033a9d7.js";const et=JSON.parse('{"title":"Git命令集合~","description":"","frontmatter":{"title":"Git命令集合~","categories":"Linux技术","tags":["GIt","命令"],"date":"2019-03-27T16:59:00.000Z"},"headers":[],"relativePath":"pages/posts/Git命令集合~.md","path":"/Users/vlinux/vlinux/blog/valaxy/vlinux.github.io/pages/posts/Git命令集合~.md","lastUpdated":1671090556000}'),o=JSON.parse('{"title":"Git命令集合~","description":"","frontmatter":{"title":"Git命令集合~","categories":"Linux技术","tags":["GIt","命令"],"date":"2019-03-27T16:59:00.000Z"},"headers":[],"relativePath":"pages/posts/Git命令集合~.md","path":"/Users/vlinux/vlinux/blog/valaxy/vlinux.github.io/pages/posts/Git命令集合~.md","lastUpdated":1671090556000}'),g={name:"pages/posts/Git命令集合~.md",data(){return{data:o,frontmatter:o.frontmatter}},setup(){u("pageData",o)}},f={id:"水一篇文章",tabindex:"-1"},v=t("p",null,"1.git init 初始化仓库 把一个目录初始化为版本仓库 （可以是空的目录 也可以是带内容的仓库）",-1),$=t("p",null,"2.git status 查看当前仓库的状态",-1),b=t("p",null,"3.git add file 添加文件到暂存区",-1),G=t("p",null,"4.git add . 或者git add * 添加当前所有的文件到暂存区",-1),A=t("p",null,"5.git rm --cached file 从缓存区撤回该文件",-1),C=t("p",null,"6.rm -rf file 删除工作区文件",-1),y=t("p",null,"7.git rm -f file 直接从暂存区域同工作区一同删除命令",-1),k=t("p",null,"小结：如果真正意义上通过版本控制系统 管理文件",-1),x=t("div",{class:"language-"},[t("span",{class:"copy"}),t("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#A6ACCD"}},"1.工作目录必须有个代码文件")]),a(`
`),t("span",{class:"line"},[t("span",{style:{color:"#A6ACCD"}},"2.通过 git add file 添加到暂存区域")]),a(`
`),t("span",{class:"line"},[t("span",{style:{color:"#A6ACCD"}},'3.通过 git commit -m "你自己输入的有关代码信息" 添加到本地仓库 ')]),a(`
`),t("span",{class:"line"},[t("span",{style:{color:"#A6ACCD"}})])])])],-1),D=t("p",null,"8.git mv old-filename new-filename 直接更改文件名称，包括缓存区",-1),N=t("p",null,"9.git diff 默认比对工作目录和暂存区域有什么不同",-1),w=t("p",null,"10.git diff --cached 比对暂存区域和本地仓库",-1),U=t("p",null,"11.如果某个文件已经被仓库管理 如果再更改此文件 直接需要一条命令提交即可",-1),V=t("p",null,"git commit -am “add newfile”",-1),B=t("p",null,"12.git log 查看历史提交信息",-1),L=t("p",null,"13.git log --oneline 一行显示提交信息",-1),S=t("p",null,"-p 查看具体的改动",-1),T=t("p",null,"-1 查看最近一次",-1),I=t("p",null,"14.git reset --hard **** 回滚数据到某一个提交",-1),J=t("p",null,"15.git reflog 查看所有修改信息",-1),O=t("p",null,"16.git log --oneline --decorate 查看当前指针的指向",-1),P=t("p",null,"17.git branch 查看分支 （*在什么上面什么就是主分支）",-1),Z=t("p",null,"18.git branch ** 创建分支",-1),M=t("p",null,"19.git checkout testing 切换分支",-1),j=t("p",null,"20.git checkout -b testing 创建并切换分支",-1),q=t("p",null,"21.git branch -d testing 删除分支",-1),z=t("p",null,"22.git merge testing 合并分支。操作必须在主分支上做",-1);function E(s,F,H,K,i,Q){const l=h,d=r;return _(),p(d,{frontmatter:i.frontmatter,data:i.data},{"main-content-md":e(()=>[t("h1",f,[a("水一篇文章 "),m(l,{class:"header-anchor",href:"#水一篇文章","aria-hidden":"true"},{default:e(()=>[a("#")]),_:1})]),v,$,b,G,A,C,y,k,x,D,N,w,U,V,B,L,S,T,I,J,O,P,Z,M,j,q,z]),"main-header":e(()=>[n(s.$slots,"main-header")]),"main-header-after":e(()=>[n(s.$slots,"main-header-after")]),"main-nav":e(()=>[n(s.$slots,"main-nav")]),"main-content":e(()=>[n(s.$slots,"main-content")]),"main-content-after":e(()=>[n(s.$slots,"main-content-after")]),"main-nav-before":e(()=>[n(s.$slots,"main-nav-before")]),"main-nav-after":e(()=>[n(s.$slots,"main-nav-after")]),comment:e(()=>[n(s.$slots,"comment")]),footer:e(()=>[n(s.$slots,"footer")]),aside:e(()=>[n(s.$slots,"aside")]),"aside-custom":e(()=>[n(s.$slots,"aside-custom")]),default:e(()=>[n(s.$slots,"default")]),_:3},8,["frontmatter","data"])}const st=c(g,[["render",E]]);export{et as __pageData,st as default};
