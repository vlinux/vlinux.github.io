import{_ as c}from"./ValaxyMain-f02151dd.js";import{_ as i,p,c as _,w as l,o as g,r as t,b as s,R as n}from"./app-b8a6f45d.js";import"./YunFooter-17369ec4.js";import"./YunCard-b0df9910.js";import"./YunPageHeader-95685dde.js";const Qn=JSON.parse('{"title":"ELK-Nginx日志分析及绘图","description":"","frontmatter":{"title":"ELK-Nginx日志分析及绘图","categories":"DevOps","tags":["ELK"],"date":"2020-08-27T16:28:00.000Z"},"headers":[{"level":2,"title":"1. 前言","slug":"_1-前言","link":"#_1-前言","children":[]},{"level":2,"title":"2. 实现过程","slug":"_2-实现过程","link":"#_2-实现过程","children":[{"level":3,"title":"2.1 nginx 日志格式编写","slug":"_2-1-nginx-日志格式编写","link":"#_2-1-nginx-日志格式编写","children":[]},{"level":3,"title":"2.2 filebeat 传输 nginx 日志","slug":"_2-2-filebeat-传输-nginx-日志","link":"#_2-2-filebeat-传输-nginx-日志","children":[]},{"level":3,"title":"2.3 logstash 配置文件编写","slug":"_2-3-logstash-配置文件编写","link":"#_2-3-logstash-配置文件编写","children":[]},{"level":3,"title":"2.4 kibana 展示[ ](https://www.cnblogs.com/hukey/p/11519612.html 1813218387)","slug":"_2-4-kibana-展示-https-www-cnblogs-com-hukey-p-11519612-html-1813218387","link":"#_2-4-kibana-展示-https-www-cnblogs-com-hukey-p-11519612-html-1813218387","children":[]}]}],"relativePath":"pages/posts/ELK-Nginx日志分析及绘图.md","path":"/Users/vlinux/vlinux/blog/valaxy/vlinux.github.io/pages/posts/ELK-Nginx日志分析及绘图.md","lastUpdated":1671090556000}'),o=JSON.parse('{"title":"ELK-Nginx日志分析及绘图","description":"","frontmatter":{"title":"ELK-Nginx日志分析及绘图","categories":"DevOps","tags":["ELK"],"date":"2020-08-27T16:28:00.000Z"},"headers":[{"level":2,"title":"1. 前言","slug":"_1-前言","link":"#_1-前言","children":[]},{"level":2,"title":"2. 实现过程","slug":"_2-实现过程","link":"#_2-实现过程","children":[{"level":3,"title":"2.1 nginx 日志格式编写","slug":"_2-1-nginx-日志格式编写","link":"#_2-1-nginx-日志格式编写","children":[]},{"level":3,"title":"2.2 filebeat 传输 nginx 日志","slug":"_2-2-filebeat-传输-nginx-日志","link":"#_2-2-filebeat-传输-nginx-日志","children":[]},{"level":3,"title":"2.3 logstash 配置文件编写","slug":"_2-3-logstash-配置文件编写","link":"#_2-3-logstash-配置文件编写","children":[]},{"level":3,"title":"2.4 kibana 展示[ ](https://www.cnblogs.com/hukey/p/11519612.html 1813218387)","slug":"_2-4-kibana-展示-https-www-cnblogs-com-hukey-p-11519612-html-1813218387","link":"#_2-4-kibana-展示-https-www-cnblogs-com-hukey-p-11519612-html-1813218387","children":[]}]}],"relativePath":"pages/posts/ELK-Nginx日志分析及绘图.md","path":"/Users/vlinux/vlinux/blog/valaxy/vlinux.github.io/pages/posts/ELK-Nginx日志分析及绘图.md","lastUpdated":1671090556000}'),h={name:"pages/posts/ELK-Nginx日志分析及绘图.md",data(){return{data:o,frontmatter:o.frontmatter}},setup(){p("pageData",o)}},d=s("h2",{id:"_1-前言",tabindex:"-1"},[n("1. 前言 "),s("a",{class:"header-anchor",href:"#_1-前言","aria-hidden":"true"},"#")],-1),u=s("p",null,"先上一张整体的效果图：",-1),m=s("p",null,[s("a",{href:"https://img2018.cnblogs.com/blog/828019/201909/828019-20190914171756743-1335980347.png",target:"_blank",rel:"noreferrer"},[s("img",{src:"https://cdn.jsdelivr.net/gh/kococ/TYPECHO_IMG/mu77/828019-20190914171756743-1335980347.png",alt:"img"})])],-1),b=s("p",null,"上面这张图就是通过 ELK 分析 nginx 日志所得到的数据，通过 kibana 的功能展示出来的效果图。是不是这样对日志做了解析，想要知道的数据一目了然。接下来就是实现过程实录。",-1),f=s("h2",{id:"_2-实现过程",tabindex:"-1"},[n("2. 实现过程 "),s("a",{class:"header-anchor",href:"#_2-实现过程","aria-hidden":"true"},"#")],-1),C=s("p",null,[n("通过上一篇："),s("a",{href:"https://www.kococ.cn/20200924/cid=619.html",target:"_blank",rel:"noreferrer"},"ELK 部署文档"),n(" 已经对 ELK + filebeat 获取 nginx 做了详细的配置介绍，这里重点就不在安装 ELK 上面了。 下面这边的内容，主要是针对 logstash 配置文件的编写和 kibana web界面的配置。")],-1),A=s("p",null,"主机信息在申明下，和上一篇一样：",-1),k=s("p",null,[s("a",{href:"https://img2018.cnblogs.com/blog/828019/201909/828019-20190914165802139-1352161924.png",target:"_blank",rel:"noreferrer"},[s("img",{src:"https://cdn.jsdelivr.net/gh/kococ/TYPECHO_IMG/mu77/828019-20190914165802139-1352161924.png",alt:"img"})])],-1),y=s("h3",{id:"_2-1-nginx-日志格式编写",tabindex:"-1"},[n("2.1 nginx 日志格式编写 "),s("a",{class:"header-anchor",href:"#_2-1-nginx-日志格式编写","aria-hidden":"true"},"#")],-1),w=s("p",null,"在编写logstash 文件之前，得有一个标准输入输出格式，这个格式通用的就是 json 格式。",-1),x=s("p",null,"首先，考虑如何才能获取 json 格式的日志，当然可以直接通过修改 nginx 日志的格式来实现，因此开始修改 nginx 日志格式。如果获取的日志无法修改json 格式，则可以通过正则表达式来匹配。",-1),v=s("p",null,"在nginx 配置文件中添加如下日志格式：",-1),D=s("div",{class:"language-"},[s("span",{class:"copy"}),s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"http {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"…")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},`    log_format main_json '{"domain":"$server_name",'`)]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},`    '"http_x_forwarded_for":"$http_x_forwarded_for",'`)]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},`    '"time_local":"$time_iso8601",'`)]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},`    '"request":"$request",'`)]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},`    '"request_body":"$request_body",'`)]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},`    '"status":$status,'`)]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},`    '"body_bytes_sent":"$body_bytes_sent",'`)]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},`    '"http_referer":"$http_referer",'`)]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},`    '"upstream_response_time":"$upstream_response_time",'`)]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},`    '"request_time":"$request_time",'`)]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},`    '"http_user_agent":"$http_user_agent",'`)]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},`    '"upstream_addr":"$upstream_addr",'`)]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},`    '"upstream_status":"$upstream_status"}';`)]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}}," ")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}}," ")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"….")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"}")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}})])])])],-1),E=s("p",null,"定义的这个nginx 日志格式叫 main_json 后面的配置文件，都可以引用这个日志格式。除了nginx 日志参数以外，还可以通过配置文件来自行添加自定义参数，比如 获取用户的真实ip",-1),$=s("p",null,"于是编写一个自定义变量的配置文件：",-1),j=s("div",{class:"language-"},[s("span",{class:"copy"}),s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},'[root@192.168.118.16 ~]`` vim /etc/nginx/location.conf` ` set $real_ip $remote_addr;``if` `( $http_x_forwarded_for ~ ``"^(\\d+\\.\\d+\\.\\d+\\.\\d+)"` `) {``    ``set` `$real_ip $1;``}')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}})])])])],-1),T=s("p",null,"这个配置文件只是为了获取用户的真实IP，变量名为： real_ip 需要在nginx.conf 中引用，在刚才的配置文件中也加入该变量，完整日志格式如下：",-1),O=s("div",{class:"language-"},[s("span",{class:"copy"}),s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},`log_format main_json '{"domain":"$server_name",'`)]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},`'"real_ip":"$real_ip",'`)]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},`'"http_x_forwarded_for":"$http_x_forwarded_for",'`)]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},`'"time_local":"$time_iso8601",'`)]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},`'"request":"$request",'`)]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},`'"request_body":"$request_body",'`)]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},`'"status":$status,'`)]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},`'"body_bytes_sent":"$body_bytes_sent",'`)]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},`'"http_referer":"$http_referer",'`)]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},`'"upstream_response_time":"$upstream_response_time",'`)]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},`'"request_time":"$request_time",'`)]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},`'"http_user_agent":"$http_user_agent",'`)]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},`'"upstream_addr":"$upstream_addr",'`)]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},`'"upstream_status":"$upstream_status"}';`)]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}})])])])],-1),P=s("p",null,"注释掉该行：",-1),I=s("div",{class:"language-"},[s("span",{class:"copy"}),s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}}," access_log /var/log/nginx/access.log main;")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}})])])])],-1),G=s("p",null,"接下来，编写一个nginx 配置文件 端口为 9527 作为测试使用",-1),H=s("div",{class:"language-"},[s("span",{class:"copy"}),s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"[root@192.168.118.16 ~]`` vim /etc/nginx/conf.d/server_9527.conf``server {``  ``listen 9527;``  ``server_name localhost;``  ``include location.conf;``  ``location / {``    ``root ``/www/9527/``;``    ``index index.html;``    ``access_log ``/www/log/access``.log main_json;``    ``error_log ``/www/log/error``.log;``  ``}``  ``location ``/shop` `{``    ``root ``/www/9527``;``    ``access_log ``/www/log/shop_access``.log main_json;``    ``error_log ``/www/log/shop_error``.log;``  ``}``}` `[root@192.168.118.16 ~]`` mkdir -p /www/{9527,log}``[root@192.168.118.16 ~]`` cd /www/9527/``[root@192.168.118.16 ``/www/9527``]`` vim index.html``hello, 9527``[root@192.168.118.16 ``/www/9527``]`` mkdir -pv /www/9527/shop``[root@192.168.118.16 ``/www/9527``]`` vim /www/9527/shop/index.html``出售9527` `[root@192.168.118.16 ``/www/9527``]`` nginx -t``[root@192.168.118.16 ``/www/9527``]`` nginx -s reload")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}})])])])],-1),M=s("p",null,"Nginx 配置完成，重新加载，访问测试：",-1),Y=s("div",{class:"language-"},[s("span",{class:"copy"}),s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"[root@192.168.118.16 ~]`` curl http://192.168.118.16:9527/index.html``hello, 9527``[root@192.168.118.16 ~]`` curl http://192.168.118.16:9527/shop/index.html``出售9527")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}})])])])],-1),K=s("p",null,"页面访问正常，查看日志：",-1),L=s("div",{class:"language-"},[s("span",{class:"copy"}),s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"[root@192.168.118.16 ~]`` ll -tsh /www/log/``total 8.0K``4.0K -rw-r--r-- 1 root root 346 Sep 14 14:35 shop_access.log``4.0K -rw-r--r--. 1 root root 341 Sep 14 14:35 access.log``  ``0 -rw-r--r--. 1 root root  0 Sep 14 14:35 error.log``  ``0 -rw-r--r-- 1 root root  0 Sep 14 14:34 shop_error.log")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}})])])])],-1),N=s("p",null,"日志文件已生成，查看日志格式：",-1),q=s("div",{class:"language-"},[s("span",{class:"copy"}),s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},'[root@192.168.118.16 ~]`` cat /www/log/access.log``{``"domain"``:``"localhost"``,``"real_ip"``:``""``,``"http_x_forwarded_for"``:``"-"``,``"time_local"``:``"2019-09-14T14:35:11+08:00"``,``"request"``:``"GET /index.html HTTP/1.1"``,``"request_body"``:``"-"``,``"status"``:200,``"body_bytes_sent"``:``"12"``,``"http_referer"``:``"-"``,``"upstream_response_time"``:``"-"``,``"request_time"``:``"0.000"``,``"http_user_agent"``:``"curl/7.29.0"``,``"upstream_addr"``:``"-"``,``"upstream_status"``:``"-"``}')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}})])])])],-1),S=s("p",null,"定义的 json 格式已经被引用到，nginx日志格式配置完成，接下来就是 通过filebeat 将nginx 日志传递给 logstash",-1),U=s("h3",{id:"_2-2-filebeat-传输-nginx-日志",tabindex:"-1"},[n("2.2 filebeat 传输 nginx 日志 "),s("a",{class:"header-anchor",href:"#_2-2-filebeat-传输-nginx-日志","aria-hidden":"true"},"#")],-1),B=s("p",null,"这里在上一篇的基础上做修改，直接修改 filebeat 配置文件：",-1),V=s("div",{class:"language-"},[s("span",{class:"copy"}),s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"[root@192.168.118.16 ~]`` vim /etc/filebeat/modules.d/nginx.yml")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}})])])])],-1),J=s("p",null,[s("a",{href:"https://img2018.cnblogs.com/blog/828019/201909/828019-20190914170056822-999219778.png",target:"_blank",rel:"noreferrer"},[s("img",{src:"https://cdn.jsdelivr.net/gh/kococ/TYPECHO_IMG/mu77/828019-20190914170056822-999219778.png",alt:"img"})])],-1),Z=s("p",null,"重启 filebeat 服务",-1),R=s("div",{class:"language-"},[s("span",{class:"copy"}),s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"[root@192.168.118.16 ~]`` systemctl restart filebeat")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}})])])])],-1),z=s("h3",{id:"_2-3-logstash-配置文件编写",tabindex:"-1"},[n("2.3 logstash 配置文件编写 "),s("a",{class:"header-anchor",href:"#_2-3-logstash-配置文件编写","aria-hidden":"true"},"#")],-1),F=s("p",null,"通过上面的步骤，filebeat 已经将 nginx 日志传输过来了，接下来就看 logstash 要怎么接收日志数据了，还是通过循序渐进的方式来编写。",-1),Q=s("p",null,"首先将日志数据打印到屏幕，保证数据的正确性。",-1),W=s("p",null,[s("a",{href:"https://img2018.cnblogs.com/blog/828019/201909/828019-20190914170146062-105485249.png",target:"_blank",rel:"noreferrer"},[s("img",{src:"https://cdn.jsdelivr.net/gh/kococ/TYPECHO_IMG/mu77/828019-20190914170146062-105485249.png",alt:"img"})])],-1),X=s("p",null,"从 nginx.conf 启动 logstash。通过浏览器访问 nginx 9527端口产生日志数据。",-1),ss=s("p",null,"这里启动 logstash 可以添加 修改自动重载的模式，这样当修改了 nginx.conf 时，不必频繁的去关闭重启。",-1),ns=s("div",{class:"language-"},[s("span",{class:"copy"}),s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"[root@192.168.118.15 ``/etc/logstash/conf``.d]`` logstash -f nginx.conf --config.reload.automatic")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}})])])])],-1),ls=s("p",null,"通过抓取一段 json 数据，分析下：",-1),es=s("p",null,"logstash 输出内容",-1),ts=s("p",null,"这里面数据很多，但是这里的有些数据不是必要的，应该保留需要的数据，而剔除没必要的数据，使 json 看起来更加简洁。",-1),os=s("p",null,"首先来查看这段 json ，发现真正的 nginx 日志数据都存在 message 里面，其他的都是一些主机服务相关的信息，但是 message 看起来乱糟糟的，简直没法看。既然采用的 json 格式，那就能够格式化。",-1),as=s("p",null,"修改配置文件如下：",-1),rs=s("p",null,[s("a",{href:"https://img2018.cnblogs.com/blog/828019/201909/828019-20190914170309225-1319713742.png",target:"_blank",rel:"noreferrer"},[s("img",{src:"https://cdn.jsdelivr.net/gh/kococ/TYPECHO_IMG/mu77/828019-20190914170309225-1319713742.png",alt:"img"})])],-1),cs=s("p",null,"logstash 输出内容",-1),is=s("p",null,"将这两次获取的数据进行一个对比，下面这个数据 message 被删除了，但是 message 中的每个字段都独立出来了。这样的好处：",-1),ps=s("p",null,"（1）日志信息更加清晰，能够准确的定位到某一个字段；",-1),_s=s("p",null,"（2）为后面存储到 elasticsearch 中，进行查询或者筛选做好了准备。",-1),gs=s("p",null,"上面这个操作就等于是将原来的 message 分列存放了。",-1),hs=s("p",null,"上面这个json 发现有两个时间：",-1),ds=s("p",null,"@timestamp - 格林尼治时间 - logstash 获取日志时间",-1),us=s("p",null,"Time_local - 东八区时间 - nginx日志记录时间",-1),ms=s("p",null,"这两个时间的 分钟和秒钟并不一致，而后面过滤日志采用的是 @timestamp 时间，也就是 logstash 时间，这就会造成 nginx 日志时间不准确的现象，因此需要将两个时间修改为一致。",-1),bs=s("p",null,[s("a",{href:"https://img2018.cnblogs.com/blog/828019/201909/828019-20190914170415825-1466620540.png",target:"_blank",rel:"noreferrer"},[s("img",{src:"https://cdn.jsdelivr.net/gh/kococ/TYPECHO_IMG/mu77/828019-20190914170415825-1466620540.png",alt:"img"})])],-1),fs=s("p",null,"logstash 输出内容",-1),Cs=s("p",null,"现在，对比两个时间的分钟 和秒钟，完全一致了。接下来，删除一些不必要的字段，并重命名一些字段名，修改配置文件如下：",-1),As=s("p",null,[s("a",{href:"https://img2018.cnblogs.com/blog/828019/201909/828019-20190914170447494-320560085.png",target:"_blank",rel:"noreferrer"},[s("img",{src:"https://cdn.jsdelivr.net/gh/kococ/TYPECHO_IMG/mu77/828019-20190914170447494-320560085.png",alt:"img"})])],-1),ks=s("p",null,"logstash 输出内容",-1),ys=s("p",null,"经过重命名和删除没有的字段，json 也变的精简了很多，这样存储 elasticsearch 消耗的存储空间也响应的变小了。",-1),ws=s("p",null,"接下来就可以将数据写入到 elasticsearch 中了。在这之前，做的都是 access.log，压根就没考虑到 error.log 的格式，因为 nginx 中 error.log 日志格式无法自定义。",-1),xs=s("p",null,"尝试访问一个错误uri 来查看下获取到的数据：",-1),vs=s("p",null,"logstash 输出内容",-1),Ds=s("p",null,"error.log 过来的数据就变成上面这个样子了。这又是个问题，做 ELK 一是为了分析数据，二是为了尽快排错，如果 ELK 连这个都做不到，那就有点鸡肋了。",-1),Es=s("p",null,"上面的这个格式看起来又是很乱了，nginx 错误日志都在 message 中，虽然nginx 错误日志无法定义格式，但是 logstash 可以通过正则表达式来将它转换为 json 格式。但在这之前，应该考虑，access.log 和 error.log 是两种不同的格式，不能用同一种方式去匹配。那怎么判断数据是来自 access.log 还是 error.log 呢？",-1),$s=s("p",null,"这里语法肯定是想到了：",-1),js=s("div",{class:"language-"},[s("span",{class:"copy"}),s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"If … {``Access.log``} elseif … {``Error.log``}")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}})])])])],-1),Ts=s("p",null,"对，语法没错，但是用什么条件呢？查看上面的日志，不难发现每次都有这样的字段：",-1),Os=s("div",{class:"language-"},[s("span",{class:"copy"}),s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},'Access.log 日志数据：``      ``"fileset"` `=> {``    ``"module"` `=> ``"nginx"``,``     ``"name"` `=> ``"access"` `error.log 日志数据：``    ``"fileset"` `=> {``    ``"module"` `=> ``"nginx"``,``     ``"name"` `=> ``"error"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}})])])])],-1),Ps=s("p",null,"这样，就有判断的依据了，根据logstash配置语法开始写：",-1),Is=s("p",null,[s("a",{href:"https://img2018.cnblogs.com/blog/828019/201909/828019-20190914170627274-1480014623.png",target:"_blank",rel:"noreferrer"},[s("img",{src:"https://cdn.jsdelivr.net/gh/kococ/TYPECHO_IMG/mu77/828019-20190914170627274-1480014623.png",alt:"img"})])],-1),Gs=s("p",null,"到目前为止，logstash 的 nginx 日志收集过滤配置文件如下：",-1),Hs=s("p",null,"配置文件名：nginx.conf",-1),Ms=s("p",null,"nginx.conf",-1),Ys=s("p",null,"测试 access.log 日志格式数据：",-1),Ks=s("p",null,"logstash 输出内容",-1),Ls=s("p",null,"测试 error.log 日志格式数据：",-1),Ns=s("p",null,"logstash 输出内容",-1),qs=s("p",null,"这下没问题了， 两种格式的数据都获取到了。接下来就将数据写入到 elasticsearch中。",-1),Ss=s("p",null,[s("a",{href:"https://img2018.cnblogs.com/blog/828019/201909/828019-20190914170756327-915369456.png",target:"_blank",rel:"noreferrer"},[s("img",{src:"https://cdn.jsdelivr.net/gh/kococ/TYPECHO_IMG/mu77/828019-20190914170756327-915369456.png",alt:"img"})])],-1),Us=s("p",null,"到目前为止，logstash 配置文件 nginx.conf 如下：",-1),Bs=s("p",null,"nginx.conf",-1),Vs=s("p",null,"这个配置也算是本次 nginx 最终版配置了。",-1),Js=s("p",null,"使用浏览器多次访问nginx 9527 端口，然后切换到 elasticsearch-head 查看索引是否创建成功。",-1),Zs=s("p",null,[s("a",{href:"https://img2018.cnblogs.com/blog/828019/201909/828019-20190914170831161-1371655326.png",target:"_blank",rel:"noreferrer"},[s("img",{src:"https://cdn.jsdelivr.net/gh/kococ/TYPECHO_IMG/mu77/828019-20190914170831161-1371655326.png",alt:"img"})])],-1),Rs=s("p",null,"ok，已经看到今天的索引创建成功，查看数据。",-1),zs=s("p",null,[s("a",{href:"https://img2018.cnblogs.com/blog/828019/201909/828019-20190914170839396-1643090650.png",target:"_blank",rel:"noreferrer"},[s("img",{src:"https://cdn.jsdelivr.net/gh/kococ/TYPECHO_IMG/mu77/828019-20190914170839396-1643090650.png",alt:"img"})])],-1),Fs=s("p",null,"数据也是没有问题的，切换到 kibana 添加索引。",-1),Qs=s("p",null,[s("a",{href:"https://img2018.cnblogs.com/blog/828019/201909/828019-20190914170848522-1424711383.png",target:"_blank",rel:"noreferrer"},[s("img",{src:"https://cdn.jsdelivr.net/gh/kococ/TYPECHO_IMG/mu77/828019-20190914170848522-1424711383.png",alt:"img"})])],-1),Ws=s("p",null,[s("a",{href:"https://img2018.cnblogs.com/blog/828019/201909/828019-20190914170858050-1439014079.png",target:"_blank",rel:"noreferrer"},[s("img",{src:"https://cdn.jsdelivr.net/gh/kococ/TYPECHO_IMG/mu77/828019-20190914170858050-1439014079.png",alt:"img"})])],-1),Xs=s("p",null,[s("a",{href:"https://img2018.cnblogs.com/blog/828019/201909/828019-20190914170902088-655673391.png",target:"_blank",rel:"noreferrer"},[s("img",{src:"https://cdn.jsdelivr.net/gh/kococ/TYPECHO_IMG/mu77/828019-20190914170902088-655673391.png",alt:"img"})])],-1),sn=s("p",null,"ok，目前已经将数据存储到 elasticsearch 并通过 kibana 展示出来了，但是想要更清晰的分析查看数据还需要在 kibana 上下一番功夫。",-1),nn=s("h3",{id:"_2-4-kibana-展示-https-www-cnblogs-com-hukey-p-11519612-html-1813218387",tabindex:"-1"},[n("2.4 kibana 展示[ ]("),s("a",{href:"https://www.cnblogs.com/hukey/p/11519612.html",target:"_blank",rel:"noreferrer"},"https://www.cnblogs.com/hukey/p/11519612.html"),n(" 1813218387) "),s("a",{class:"header-anchor",href:"#_2-4-kibana-展示-https-www-cnblogs-com-hukey-p-11519612-html-1813218387","aria-hidden":"true"},"#")],-1),ln=s("p",null,"首先是 Discover 这里，每次进来，都需要一目了然的查看日志，做以下配置：",-1),en=s("p",null,[s("a",{href:"https://img2018.cnblogs.com/blog/828019/201909/828019-20190914170918203-1826275736.png",target:"_blank",rel:"noreferrer"},[s("img",{src:"https://cdn.jsdelivr.net/gh/kococ/TYPECHO_IMG/mu77/828019-20190914170918203-1826275736.png",alt:"img"})])],-1),tn=s("p",null,[s("a",{href:"https://img2018.cnblogs.com/blog/828019/201909/828019-20190914170923063-911065831.png",target:"_blank",rel:"noreferrer"},[s("img",{src:"https://cdn.jsdelivr.net/gh/kococ/TYPECHO_IMG/mu77/828019-20190914170923063-911065831.png",alt:"img"})])],-1),on=s("p",null,"上面两个设置以后，每次登录进来只需要点击 打开 查看相关模板就能看到清晰的日志数据。",-1),an=s("p",null,[s("a",{href:"https://img2018.cnblogs.com/blog/828019/201909/828019-20190914170934181-472655354.png",target:"_blank",rel:"noreferrer"},[s("img",{src:"https://cdn.jsdelivr.net/gh/kococ/TYPECHO_IMG/mu77/828019-20190914170934181-472655354.png",alt:"img"})])],-1),rn=s("p",null,"接下来，就是绘制最上面那副图啦。",-1),cn=s("p",null,"在绘制之前必须要有数据支撑，因为这个是测试环境没有真是的用户访问。因此需要造一批假数据访问。",-1),pn=s("p",null,"方法就是 直接去 access.log 里复制一条数据，修改 real_ip 为 公网ip",-1),_n=s("p",null,"假数据添加成功后，来进行图表的配置，点击 可视化",-1),gn=s("p",null,[s("a",{href:"https://img2018.cnblogs.com/blog/828019/201909/828019-20190914171008460-526233651.png",target:"_blank",rel:"noreferrer"},[s("img",{src:"https://cdn.jsdelivr.net/gh/kococ/TYPECHO_IMG/mu77/828019-20190914171008460-526233651.png",alt:"img"})])],-1),hn=s("p",null,"第一个：访问省会城市 TOP 5 （饼图）",-1),dn=s("p",null,"选择饼图，然后选择 logstash-nginx-* 索引",-1),un=s("p",null,[s("a",{href:"https://img2018.cnblogs.com/blog/828019/201909/828019-20190914171025923-579239111.png",target:"_blank",rel:"noreferrer"},[s("img",{src:"https://cdn.jsdelivr.net/gh/kococ/TYPECHO_IMG/mu77/828019-20190914171025923-579239111.png",alt:"img"})])],-1),mn=s("p",null,"完成后点击保存。",-1),bn=s("p",null,"第二个：访问分布地图（坐标地图）",-1),fn=s("p",null,[s("a",{href:"https://img2018.cnblogs.com/blog/828019/201909/828019-20190914171056562-1145989517.png",target:"_blank",rel:"noreferrer"},[s("img",{src:"https://cdn.jsdelivr.net/gh/kococ/TYPECHO_IMG/mu77/828019-20190914171056562-1145989517.png",alt:"img"})])],-1),Cn=s("p",null,"完成后点击保存。",-1),An=s("p",null,"第三个：域名TOP5 （数据表）",-1),kn=s("p",null,[s("a",{href:"https://img2018.cnblogs.com/blog/828019/201909/828019-20190914171117412-2106656346.png",target:"_blank",rel:"noreferrer"},[s("img",{src:"https://cdn.jsdelivr.net/gh/kococ/TYPECHO_IMG/mu77/828019-20190914171117412-2106656346.png",alt:"img"})])],-1),yn=s("p",null,"完成后点击保存。",-1),wn=s("p",null,"第四个：后端服务TOP5（数据表）",-1),xn=s("p",null,[s("a",{href:"https://img2018.cnblogs.com/blog/828019/201909/828019-20190914171137657-803006825.png",target:"_blank",rel:"noreferrer"},[s("img",{src:"https://cdn.jsdelivr.net/gh/kococ/TYPECHO_IMG/mu77/828019-20190914171137657-803006825.png",alt:"img"})])],-1),vn=s("p",null,"完成后点击保存。",-1),Dn=s("p",null,"第五个：uri top 5（数据表）",-1),En=s("p",null,[s("a",{href:"https://img2018.cnblogs.com/blog/828019/201909/828019-20190914171158766-897281550.png",target:"_blank",rel:"noreferrer"},[s("img",{src:"https://cdn.jsdelivr.net/gh/kococ/TYPECHO_IMG/mu77/828019-20190914171158766-897281550.png",alt:"img"})])],-1),$n=s("p",null,"完成后点击保存。",-1),jn=s("p",null,"第六个：realipTOP5 （水平条形图）",-1),Tn=s("p",null,[s("a",{href:"https://img2018.cnblogs.com/blog/828019/201909/828019-20190914171224021-218490679.png",target:"_blank",rel:"noreferrer"},[s("img",{src:"https://cdn.jsdelivr.net/gh/kococ/TYPECHO_IMG/mu77/828019-20190914171224021-218490679.png",alt:"img"})])],-1),On=s("p",null,"完成后点击保存。",-1),Pn=s("p",null,"第七个：http状态TOP5 （饼图）",-1),In=s("p",null,[s("a",{href:"https://img2018.cnblogs.com/blog/828019/201909/828019-20190914171315469-1780001853.png",target:"_blank",rel:"noreferrer"},[s("img",{src:"https://cdn.jsdelivr.net/gh/kococ/TYPECHO_IMG/mu77/828019-20190914171315469-1780001853.png",alt:"img"})])],-1),Gn=s("p",null,"完成后点击保存。",-1),Hn=s("p",null,[s("a",{href:"https://img2018.cnblogs.com/blog/828019/201909/828019-20190914171337035-743648824.png",target:"_blank",rel:"noreferrer"},[s("img",{src:"https://cdn.jsdelivr.net/gh/kococ/TYPECHO_IMG/mu77/828019-20190914171337035-743648824.png",alt:"img"})])],-1),Mn=s("p",null,"好了， 在 可视化 一栏中，创建了 7 个数据表图，点开 仪表板，将这些图表展示出来就行了。",-1),Yn=s("p",null,[s("a",{href:"https://img2018.cnblogs.com/blog/828019/201909/828019-20190914171349921-1797704129.png",target:"_blank",rel:"noreferrer"},[s("img",{src:"https://cdn.jsdelivr.net/gh/kococ/TYPECHO_IMG/mu77/828019-20190914171349921-1797704129.png",alt:"img"})])],-1),Kn=s("p",null,[s("a",{href:"https://img2018.cnblogs.com/blog/828019/201909/828019-20190914171357047-1867714541.png",target:"_blank",rel:"noreferrer"},[s("img",{src:"https://cdn.jsdelivr.net/gh/kococ/TYPECHO_IMG/mu77/828019-20190914171357047-1867714541.png",alt:"img"})])],-1),Ln=s("p",null,"然后将图表摆放好，大功告成。",-1),Nn=s("p",null,[s("a",{href:"https://img2018.cnblogs.com/blog/828019/201909/828019-20190914171408307-1023715408.png",target:"_blank",rel:"noreferrer"},[s("img",{src:"https://cdn.jsdelivr.net/gh/kococ/TYPECHO_IMG/mu77/828019-20190914171408307-1023715408.png",alt:"img"})])],-1);function qn(e,Sn,Un,Bn,a,Vn){const r=c;return g(),_(r,{frontmatter:a.frontmatter,data:a.data},{"main-content-md":l(()=>[d,u,m,b,f,C,A,k,y,w,x,v,D,E,$,j,T,O,P,I,G,H,M,Y,K,L,N,q,S,U,B,V,J,Z,R,z,F,Q,W,X,ss,ns,ls,es,ts,os,as,rs,cs,is,ps,_s,gs,hs,ds,us,ms,bs,fs,Cs,As,ks,ys,ws,xs,vs,Ds,Es,$s,js,Ts,Os,Ps,Is,Gs,Hs,Ms,Ys,Ks,Ls,Ns,qs,Ss,Us,Bs,Vs,Js,Zs,Rs,zs,Fs,Qs,Ws,Xs,sn,nn,ln,en,tn,on,an,rn,cn,pn,_n,gn,hn,dn,un,mn,bn,fn,Cn,An,kn,yn,wn,xn,vn,Dn,En,$n,jn,Tn,On,Pn,In,Gn,Hn,Mn,Yn,Kn,Ln,Nn]),"main-header":l(()=>[t(e.$slots,"main-header")]),"main-header-after":l(()=>[t(e.$slots,"main-header-after")]),"main-nav":l(()=>[t(e.$slots,"main-nav")]),"main-content":l(()=>[t(e.$slots,"main-content")]),"main-content-after":l(()=>[t(e.$slots,"main-content-after")]),"main-nav-before":l(()=>[t(e.$slots,"main-nav-before")]),"main-nav-after":l(()=>[t(e.$slots,"main-nav-after")]),comment:l(()=>[t(e.$slots,"comment")]),footer:l(()=>[t(e.$slots,"footer")]),aside:l(()=>[t(e.$slots,"aside")]),"aside-custom":l(()=>[t(e.$slots,"aside-custom")]),default:l(()=>[t(e.$slots,"default")]),_:3},8,["frontmatter","data"])}const Wn=i(h,[["render",qn],["__file","/Users/vlinux/vlinux/blog/valaxy/vlinux.github.io/pages/posts/ELK-Nginx日志分析及绘图.md"]]);export{Qn as __pageData,Wn as default};
