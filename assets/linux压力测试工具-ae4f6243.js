import{_ as r}from"./ValaxyMain.vue_vue_type_style_index_0_lang-f9369a8c.js";import{_ as u,c as h,w as l,o as _,b as e,U as n,q as c,r as o,W as p,p as m}from"./app-c05f80d3.js";import"./YunFooter.vue_vue_type_script_setup_true_lang-d10a4101.js";import"./YunCard.vue_vue_type_style_index_0_lang-b99348e1.js";import"./YunPageHeader.vue_vue_type_script_setup_true_lang-8e036763.js";const Ue=JSON.parse('{"title":"linux压力测试工具","description":"","frontmatter":{"title":"linux压力测试工具","categories":"Linux技术","tags":["ab","Webbench","压力测试"],"date":"2020-02-21T12:18:00.000Z"},"headers":[{"level":2,"title":"ab网站压力测试工具","slug":"ab网站压力测试工具","link":"#ab网站压力测试工具","children":[]},{"level":2,"title":"网站压力测试工具-Webbench","slug":"网站压力测试工具-webbench","link":"#网站压力测试工具-webbench","children":[]}],"relativePath":"pages/posts/linux压力测试工具.md","path":"/Users/vlinux/vlinux/blog/valaxy/vlinux.github.io/pages/posts/linux压力测试工具.md","lastUpdated":1671090556000}'),a=JSON.parse('{"title":"linux压力测试工具","description":"","frontmatter":{"title":"linux压力测试工具","categories":"Linux技术","tags":["ab","Webbench","压力测试"],"date":"2020-02-21T12:18:00.000Z"},"headers":[{"level":2,"title":"ab网站压力测试工具","slug":"ab网站压力测试工具","link":"#ab网站压力测试工具","children":[]},{"level":2,"title":"网站压力测试工具-Webbench","slug":"网站压力测试工具-webbench","link":"#网站压力测试工具-webbench","children":[]}],"relativePath":"pages/posts/linux压力测试工具.md","path":"/Users/vlinux/vlinux/blog/valaxy/vlinux.github.io/pages/posts/linux压力测试工具.md","lastUpdated":1671090556000}'),b={name:"pages/posts/linux压力测试工具.md",data(){return{data:a,frontmatter:a.frontmatter}},setup(){m("pageData",a)}},g={id:"ab网站压力测试工具",tabindex:"-1"},f=e("p",null,[n("水一篇~~~~~~~~~~~~~~ "),e("strong",null,"参数：")],-1),w=e("p",null,[e("code",null,"-n requests Number of requests to perform**")],-1),v=e("p",null,[n("在测试会话中所执行的请求总个数。默认时，仅执行一个请求 "),e("code",null,"-c concurrency Number of multiple requests to make"),n(" 一次产生的请求个数。默认是一次一个。")],-1),x=e("p",null,"同时处理1000个请求。 一次要执行1000个并发请求。**",-1),k=e("p",null,[e("code",null,"ab -n 1000 -c 1000 http://192.168.1.63/index.html**")],-1),S=e("p",null,"ab命令在一般系统上面做测试时候，一般并发不能超过1024个，其实是因为因为系统限制每个进程打开的最大文件数为1024，可以用ulimit -a来查看",-1),$=e("p",null,[e("code",null,"ab -n 1000 -c 1000 http://192.168.1.63/index.html")],-1),y=e("p",null,[e("code",null,"Server Software: Apache/2.2.15 #****被测试的httpd服务器版本：//平台apache 版本2.0.54**")],-1),T=e("p",null,[e("code",null,"**Server Hostname: 192.168.1.63 //****服务器主机名**")],-1),q=e("p",null,[e("code",null,"**Server Port: 80 //****服务器端口**")],-1),W=e("p",null,[e("code",null,"**Document Path: /index.html //****测试的页面文档**")],-1),L=e("p",null,[e("code",null,"**Document Length: 13 bytes //****文档大小**")],-1),P=e("p",null,[e("code",null,"**Concurrency****（并发） Level: 1000** **//****并发数**")],-1),C=e("p",null,[e("code",null,"**Time taken for tests: 2.166 seconds #****整个测试花费的时间**")],-1),B=e("p",null,[e("code",null,"**Complete requests: 1000** **//****完成的请求数量**")],-1),N=e("p",null,[e("code",null,"**Failed requests: 0** **//****失败的请求数量**")],-1),U=e("p",null,[e("code",null,"**Write errors: 0**")],-1),A=e("p",null,[e("code",null,"**Total transferred: 281120 bytes** **#****整个测试过程中总传输字节数**")],-1),G=e("p",null,[e("code",null,"**HTML transferred: 13052 bytes #****//****整个场景中的HTML内容传输量**")],-1),R=e("p",null,[e("code",null,"**Requests per second: 461.77 [#/sec] (mean) #****每秒处理请求数。//大家最关心的指标之一，相当于服务器中的每秒事务数 ，后面括号中的 mean 表示这是一个平均值**")],-1),V=e("p",null,[e("code",null,"**Time per request: 2165.597 [ms] (mean) #** **//****大家最关心的指标之二，平均请求响应时间 ，后面括号中的 mean 表示这是一个平均值**")],-1),z=e("p",null,[e("code",null,"**Time per request: 2.166 [ms] (mean, across all concurrent requests)** **#****每个请求的时间：2.166[毫秒]（意思是说，在所有的并发请求） //每个请求实际运行时间的平均值。**")],-1),D=e("p",null,[e("strong",null,"由于对于并发请求，cpu实际上并不是同时处理的，而是按照每个请求获得的时间片逐个轮转处理的，所以基本上第一个Time per request时间约等于第二个Time per request时间乘以并发请求数")],-1),H=e("p",null,[e("code",null,"**Transfer rate: 126.77 [Kbytes/sec] received #****传输速率：****//****平均每秒网络上的流量，可以帮助排除是否存在网络流量过大导致响应时间延长的问题**")],-1),O=e("p",null,[e("code",null,"**Connection Times (ms) #****连接时间（毫秒）**")],-1),E=e("p",null,[e("code",null,"**min mean[+/-sd] median max # median****（中间）**")],-1),J={id:"网站压力测试工具-webbench",tabindex:"-1"},K=e("strong",null,"网站压力测试工具-Webbench",-1),M=e("p",null,"下载并安装webbench：**",-1),Z=e("p",null,[e("code",null,"wget http://www.ha97.com/code/webbench-1.5.tar.gz"),e("code",null,"tar zxvf webbench-1.5.tar.gz** **"),e("code",null,"cd webbench-1.5"),e("code",null,"make**")],-1),F=e("p",null,[e("code",null,"mkdir -p /usr/local/man/man1 #****不创建这个执行make install报错：**")],-1),I=e("p",null,[e("code",null,"**install: cannot create regular file /usr/local/man/man1': No such file or directory")],-1),j=e("p",null,[e("code",null,"**make: \\**\\* [install] Error 1**")],-1),Q=e("p",null,[e("code",null,"make install**")],-1),X=e("p",null,[e("code",null,"**install -s webbench /usr/local/bin**")],-1),Y=e("p",null,[e("code",null,"**install -m 644 webbench.1 /usr/local/man/man1**")],-1),ee=e("p",null,[e("code",null,"**install -d /usr/local/share/doc/webbench**")],-1),ne=e("p",null,[e("code",null,"**install -m 644 debian/copyright /usr/local/share/doc/webbench**")],-1),le=e("p",null,[e("code",null,"**install -m 644 debian/changelog /usr/local/share/doc/webbench"),n("**")],-1),te=e("p",null,[n("进行测试 "),e("code",null,"webbench -h**")],-1),oe=e("p",null,[e("strong",null,"测试参数解释： -c为客户端数，-t为时间(秒)")],-1),se=e("p",null,[e("strong",null,"实战：当为1个客户端时，持续访问1秒。"),e("code",null,"**webbench -c 1 -t 1 http://192.168.1.63/index.html**")],-1),ce=e("p",null,[e("code",null,"**Webbench - Simple Web Benchmark 1.5**")],-1),ae=e("p",null,[e("code",null,"**Copyright (c) Radim Kolar 1997-2004, GPL Open Source Software.**")],-1),ie=e("p",null,[e("code",null,"**Benchmarking: GET http://192.168.1.63/index.html**")],-1),de=e("p",null,[e("code",null,"**1 client, running 1 sec.**")],-1),re=e("p",null,[e("code",null,"**Speed=****38219 pages/min****,** **178080** **bytes/sec.**")],-1),ue=e("p",null,[e("strong",null,[n("#"),e("strong",null,[e("strong",null,"当只有一个客户端时，一分钟可以响应")]),n("38219"),e("strong",null,[e("strong",null,"个页面，1秒可以传输")]),n("178080****字节")])],-1),he=e("p",null,[e("code",null,"**Requests:** **637** **susceed,** **0** **failed.**")],-1),_e=e("p",null,[e("strong",null,[n("#1"),e("strong",null,[e("strong",null,"个客户端，1秒产生了")]),n("637****个请求，0个失败。")])],-1),pe=e("p",null,"**实战：使用20个客户端并发访问并持续访问10秒",-1),me=e("p",null,[e("code",null,"webbench -c 20 -t 10 http://192.168.1.63/index.html")],-1),be=e("p",null,[e("code",null,"Webbench - Simple Web Benchmark 1.5")],-1),ge=e("p",null,[e("code",null,"Copyright (c) Radim Kolar 1997-2004, GPL Open Source Software.")],-1),fe=e("p",null,[e("code",null,"Benchmarking: GET http://192.168.1.63/index.html")],-1),we=e("p",null,[e("code",null,"**20 clients, running 10 sec.**")],-1),ve=e("p",null,"``",-1),xe=e("p",null,[e("code",null,"**Speed=****397356** **pages/min, 1854384 bytes/sec.")],-1),ke=e("p",null,[e("code",null,"**Requests:** **66226** **susceed, 0 failed.")],-1),Se=e("p",null,"测试注意事项： 1.压力测试工作应该放到产品上线之前，而不是上线以后； 2.webbench 做压力测试时，该软件自身也会消耗CPU和内存资源，为了测试准确，请将 webbench 安装在别的服务器上； 3.测试时尽量跨公网进行，而不是内网； 如果带宽不够时，可以内网测试。 4.测试时并发应当由小逐渐加大，观察一下网站负载及打开是否流畅，直到网站打开缓慢甚至网站完全打不开； 可以一边在linux测试，一个在浏览上打开，查看是否流畅。 5.应尽量进行单元测试，如B2C网站可以着重测试购物车、推广页面等，因为这些页面占整个网站访问量比重较大。**",-1);function $e(t,ye,Te,qe,i,We){const s=p,d=r;return _(),h(d,{frontmatter:i.frontmatter,data:i.data},{"main-content-md":l(()=>[e("h2",g,[n("ab网站压力测试工具 "),c(s,{class:"header-anchor",href:"#ab网站压力测试工具","aria-hidden":"true"},{default:l(()=>[n("#")]),_:1})]),f,e("p",null,[e("strong",null,[n("语法： ab -n 数字 -c 数字 "),c(s,{href:"http://xn--gzu811i",target:"_blank",rel:"noreferrer"},{default:l(()=>[n("http://链接")]),_:1})])]),w,v,x,k,S,$,y,T,q,W,L,P,C,B,N,U,A,G,R,V,z,D,H,O,E,e("h2",J,[K,n(),c(s,{class:"header-anchor",href:"#网站压力测试工具-webbench","aria-hidden":"true"},{default:l(()=>[n("#")]),_:1})]),e("p",null,[n("webbench简介： Webbench是有名的网站压力测试工具，它是由 Lionbridge公司（"),c(s,{href:"http://www.lionbridge.com",target:"_blank",rel:"noreferrer"},{default:l(()=>[n("http://www.lionbridge.com")]),_:1}),n("）开发的网站压力测试工具，它能测试处在相同硬件上，不同服务的性能以及不同硬件上同一个服务的运行状况。webbench不但能具有便准静态页面的测试能力，还能对动态页面（ASP,PHP,JAVA,CGI）进行测试的能力。**")]),e("p",null,[e("strong",null,[n("官网："),c(s,{href:"http://www.lionbridge.com",target:"_blank",rel:"noreferrer"},{default:l(()=>[n("http://www.lionbridge.com")]),_:1})])]),M,Z,F,I,j,Q,X,Y,ee,ne,le,te,oe,se,ce,ae,ie,de,re,ue,he,_e,pe,me,be,ge,fe,we,ve,xe,ke,Se]),"main-header":l(()=>[o(t.$slots,"main-header")]),"main-header-after":l(()=>[o(t.$slots,"main-header-after")]),"main-nav":l(()=>[o(t.$slots,"main-nav")]),"main-content":l(()=>[o(t.$slots,"main-content")]),"main-content-after":l(()=>[o(t.$slots,"main-content-after")]),"main-nav-before":l(()=>[o(t.$slots,"main-nav-before")]),"main-nav-after":l(()=>[o(t.$slots,"main-nav-after")]),comment:l(()=>[o(t.$slots,"comment")]),footer:l(()=>[o(t.$slots,"footer")]),aside:l(()=>[o(t.$slots,"aside")]),"aside-custom":l(()=>[o(t.$slots,"aside-custom")]),default:l(()=>[o(t.$slots,"default")]),_:3},8,["frontmatter","data"])}const Ae=u(b,[["render",$e]]);export{Ue as __pageData,Ae as default};
