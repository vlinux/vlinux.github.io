import{_ as c}from"./ValaxyMain.vue_vue_type_style_index_0_lang.gfo-rUCP.js";import"./chunks/@vueuse/motion.BITvz5PP.js";import{e as f,u as g,a as h}from"./chunks/vue-router.DQHxU7r6.js";import{aa as b,ap as a,ag as n,af as t,ai as s,P as v,ab as $,a1 as k}from"./framework.GHZxz7jq.js";import"./index.CFgbcban.js";import"./chunks/dayjs.BldX5ftQ.js";import"./chunks/vue-i18n.C7V8WoQZ.js";import"./chunks/pinia.BfAlK2F6.js";import"./chunks/nprogress.BZwbcB2O.js";/* empty css                    */import"./YunComment.vue_vue_type_style_index_0_lang.CU_FKKcY.js";import"./index.C5okkQwF.js";import"./YunPageHeader.vue_vue_type_script_setup_true_lang.fblE3Fel.js";import"./post.zk_xPNhE.js";const G=f("/posts/Git命令集合~",async l=>JSON.parse('{"title":"Git命令集合~","description":"","frontmatter":{"title":"Git命令集合~","categories":"Linux技术","tags":["GIt","命令"],"date":"2019-03-27 16:59:00"},"headers":[],"relativePath":"pages/posts/Git命令集合~.md","lastUpdated":null}'),{lazy:(l,i)=>l.name===i.name}),z={__name:"Git命令集合~",setup(l,{expose:i}){const{data:r}=G(),p=h(),u=g(),o=Object.assign(u.meta.frontmatter||{},r.value?.frontmatter||{});return p.currentRoute.value.data=r.value,k("valaxy:frontmatter",o),globalThis.$frontmatter=o,i({frontmatter:{title:"Git命令集合~",categories:"Linux技术",tags:["GIt","命令"],date:"2019-03-27 16:59:00"}}),(e,m)=>{const d=c;return $(),b(d,{frontmatter:v(o)},{"main-content-md":a(()=>[...m[0]||(m[0]=[t("h1",{id:"水一篇文章",tabindex:"-1"},[s("水一篇文章 "),t("a",{class:"header-anchor",href:"#水一篇文章","aria-label":'Permalink to "水一篇文章"'},"​")],-1),t("p",null,"1.git init 初始化仓库 把一个目录初始化为版本仓库 （可以是空的目录 也可以是带内容的仓库）",-1),t("p",null,"2.git status 查看当前仓库的状态",-1),t("p",null,"3.git add file 添加文件到暂存区",-1),t("p",null,"4.git add . 或者git add * 添加当前所有的文件到暂存区",-1),t("p",null,"5.git rm --cached file 从缓存区撤回该文件",-1),t("p",null,"6.rm -rf file 删除工作区文件",-1),t("p",null,"7.git rm -f file 直接从暂存区域同工作区一同删除命令",-1),t("p",null,"小结：如果真正意义上通过版本控制系统 管理文件",-1),t("div",{class:"language-"},[t("button",{title:"Copy code",class:"copy"}),t("span",{class:"lang"}),t("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[t("code",{"v-pre":""},[t("span",{class:"line"},[t("span",null,"1.工作目录必须有个代码文件")]),s(`
`),t("span",{class:"line"},[t("span",null,"2.通过 git add file 添加到暂存区域")]),s(`
`),t("span",{class:"line"},[t("span",null,'3.通过 git commit -m "你自己输入的有关代码信息" 添加到本地仓库')])])]),t("button",{class:"code-block-unfold-btn"})],-1),t("p",null,"8.git mv old-filename new-filename 直接更改文件名称，包括缓存区",-1),t("p",null,"9.git diff 默认比对工作目录和暂存区域有什么不同",-1),t("p",null,"10.git diff --cached 比对暂存区域和本地仓库",-1),t("p",null,"11.如果某个文件已经被仓库管理 如果再更改此文件 直接需要一条命令提交即可",-1),t("p",null,"git commit -am “add newfile”",-1),t("p",null,"12.git log 查看历史提交信息",-1),t("p",null,"13.git log --oneline 一行显示提交信息",-1),t("p",null,"-p 查看具体的改动",-1),t("p",null,"-1 查看最近一次",-1),t("p",null,"14.git reset --hard **** 回滚数据到某一个提交",-1),t("p",null,"15.git reflog 查看所有修改信息",-1),t("p",null,"16.git log --oneline --decorate 查看当前指针的指向",-1),t("p",null,"17.git branch 查看分支 （*在什么上面什么就是主分支）",-1),t("p",null,"18.git branch ** 创建分支",-1),t("p",null,"19.git checkout testing 切换分支",-1),t("p",null,"20.git checkout -b testing 创建并切换分支",-1),t("p",null,"21.git branch -d testing 删除分支",-1),t("p",null,"22.git merge testing 合并分支。操作必须在主分支上做",-1)])]),"main-header":a(()=>[n(e.$slots,"main-header")]),"main-header-after":a(()=>[n(e.$slots,"main-header-after")]),"main-nav":a(()=>[n(e.$slots,"main-nav")]),"main-content-before":a(()=>[n(e.$slots,"main-content-before")]),"main-content":a(()=>[n(e.$slots,"main-content")]),"main-content-after":a(()=>[n(e.$slots,"main-content-after")]),"main-nav-before":a(()=>[n(e.$slots,"main-nav-before")]),"main-nav-after":a(()=>[n(e.$slots,"main-nav-after")]),comment:a(()=>[n(e.$slots,"comment")]),footer:a(()=>[n(e.$slots,"footer")]),aside:a(()=>[n(e.$slots,"aside")]),"aside-custom":a(()=>[n(e.$slots,"aside-custom")]),default:a(()=>[n(e.$slots,"default")]),_:3},8,["frontmatter"])}}};export{z as default,G as usePageData};
